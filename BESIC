理   python  NSD
             187 9279 3826 （同微信）
 还原命令： rht-vmctl reset  电脑名
虚拟机： classroom  server  desktop  win
############################################
Linux文件目录
/ 根  
/etc 存放系统配置文件（删掉的话无法正常启动）
/bin 系统程序文件
/boot 启动所需的文件
/dev 分区信息
/home 普通用户的家目录
/root 管理员的家目录（~）
/var 系统中大小经常变化的文件 比如 log
/
##############################################
ls -l 详解

    d  目录文件    -  普通文件      l  链接文件

    权限  ：  r  读    w  写   x 执行权限 
     属主    属组    其他人  
     rwx     r--      r-x
tab键 
       1. 按一次，补全命令或者路径
       2. 按两次，下来菜单，照着找
       3. 按一次，检查这个文件有没有

mkdir  文件夹 目录
       mkdir  -p  a/aa/aaa
touch   文件
       touch 1.txt
mv  移动
    格式：  mv  源文件   目的位置
    1.mv  可以移动文件
    2.mv  可以移动文件的同时改名
    3.mv  可以直接重命名（移动到当前路径下）  
移动时修改文件名
[root@room9pc01 ~]# ls
123456789        besic02               nu.txt           秋名山.txt  下载
a                bin                   original-ks.cfg  视频        音乐
anaconda-ks.cfg  initial-setup-ks.cfg  公共             图片        桌面
b                ll                    模板             文档
[root@room9pc01 ~]# mv 123456789 ll/sbc
[root@room9pc01 ~]# cd ll
[root@room9pc01 ll]# ls
1.txt  456.txt  sbc


    调去上一条命令的执行参数路径  esc+.   alt+.
cp 复制
   格式：  cp  源文件  目的位置
           1. 拷贝的过程中叶可以改名字  cp 1.txt /2.txt
           2. 拷贝文件夹需要加参数  -a
           3. 与mv的区别是一个源文件还在，一个不在。

练习：
      1.在自己家里创建一个a文件夹，在里面创建1.txt 2.txt 3.txt
            
         cd    mkdir a  cd a  touch 1.txt 2.txt 3.txt
      2. 移动题一中的3.txt 到/下，并且改名字为4.txt
             mv 3.txt /4.txt
      3. 在自己家里创建一个b文件夹，b文件夹中创建一个b文件，拷贝这个b文件到/tmp/b/bb/bbb中。
           mkdir b  cd b  touch b
           mkdir -p /tmp/b/bb/bbb
           cp b /tmp/b/bb/bbb


      4.在题3的bbb文件夹中，创建c.txt d.txt .然后把c.txt重命名为v.txt
         alt + .    cd  /tmp/b/bb/bbb   touch c.txt d.txt
            mv c.txt v.txt
#############################
鼠标

选中为复制   只在终端下有用  适用于所有的 linux系统 
滚轮 粘贴
rth- cmcltl reset classroom
rth- cmcltl reset server
ctlr+alt+f2 切换到字符模式

ctlr+alt+f1 回到gui模式
##########################
通配符
eg
touch 1.txt 12.txt 13.txt 123.txt 456.txt
[root@room9pc01 ll]# ls
123.txt  12.txt  13.txt  1.txt  456.txt
[root@room9pc01 ll]# rm -rf 1?.txt
[root@room9pc01 ll]# ls
123.txt  1.txt  456.txt
[root@room9pc01 ll]# touch 145.txt
[root@room9pc01 ll]# ls
123.txt  145.txt  1.txt  456.txt



? 配一位
* 全部
##########################################

cat head tail   

cat -n //  ;查看文件 显示行号:
head -n //  ;查看文件 前几行 
tail -n //   ;查看文件 尾部 几行  n表示 你要显示几行
############################################
grep 关键字 目的文件  ；
grep root  /etc/passwd
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin

grep ^$ /etc/passwd	~$ 匹配空行
grep ^root /etc/passwd  ^匹配 root 开头的 
grep login$ /etc/passwd |tail -4   ;  $匹配 以 login 结尾,且之显示四行
##############################################
管道 |   将上一条命令执行的结果交给下一条命令执行
eg：
cat /etc/passwd | grep root

root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin

cat /etc/passwd | wc -l 计数 
42

cat -n /etc/passwd | head -15 |tail -6   带行号输出
    10	operator:x:11:0:operator:/root:/sbin/nologin
    11	games:x:12:100:games:/usr/games:/sbin/nologin
    12	ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
    13	nobody:x:99:99:Nobody:/:/sbin/nologin
    14	systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin
    15	dbus:x:81:81:System message bus:/:/sbin/nologin

cat -n /etc/passwd | head -15 |tail -6 |wc -l  配合计数使用 
6
##################################################################3
重定向
>    覆盖重定向  直接覆盖原文件

[root@room9pc01 home]# echo 123 > 1.txt
[root@room9pc01 home]# cat 1.txt 
123
[root@room9pc01 home]# echo 456 > 1.txt
[root@room9pc01 home]# cat 1.txt 
456

>>  追加重定向    保留源文件 在最后追加

[root@room9pc01 home]# echo 123 >>1.txt
[root@room9pc01 home]# cat 1.txt 
456
123
[root@room9pc01 home]# echo 789 >>1.txt
[root@room9pc01 home]# cat 1.txt 
456
123
789
############################################
echo 

vim编辑器

命令模式 	批量操作，复制粘贴    i 进入插入模式 esc 推出 进入命令模式； 按两次 esc 进入 末行模式 wq 退出 q！推出不保存 ！强制执行
					从光标位置开始往下操作，
	命令模式下执行			复制      数字+yy  光标下几行需要复制，不是复制多少行
					粘贴      p
					删除      数字+dd  删除了数字行
					全文查找 /关键字  
					撤销     u
					反撤销   ctrl+r
					退出保存 shift+zz 
插入模式 	写入文档
末行模式 	保存退出  wq 退出保存 q！退出不保存 
set nu 显示行数 
：6 快速移动到某一行  移动到第6行
#####################################################
远程控制
teamviewer
win  cmd 命令
mstwc
跨平台 win +linux
tigervnc
xshell

ssh -X root@server0.example.com  :-X 调用图形界面 ##server0.example.com 域名
#########################################################
tar 打包压缩
打包
            新包的名字     
tar -czf xxx.tar.gz 需要打包的文件名 #######
解压
          需要解压博得名字
tar -xf xxx.tar.gz 解压到当前位置
tar -xf xxx.tar.gz -C /指定压缩位置  大写C 小写识别
##################################
分号  ;
命令 接着执行 多条命令 
eg mkdir pp ; touch xixi
#####################
创建普通用户
创建用户
useradd 用户名
1.查 id  id 用户名  
[root@room9pc01 home]# id Student
uid=1000(Student) gid=1000(Student) 组=1000(Student)
2.查home ls /home
3.查文件   grep /etc/passwd
删除用户 
userdel 用户名
1.删除家 rm -rf /home/xixi
2.       vim
切换 用户 
su 用户名
###################################################
创建组 

groupadd xixi
groupdel xixi
命令别名 （临时别名）
alias
 别名=‘实际执行的命令’
别名定义 
	alias if="ifconfig"
	alias ho="hostname"
查看别名 alias 
取消别名 unalias
############################################################
破解用户密码（rhce考试第一步）
1.
重启系统 在系统启动过程中内核选择部分 按 E  进入单用户模式
2.
找到Linux 16 的一行 在末端输入 rd.break console=tty00
3. Ctrl+x 
4.  输入
    mount -o remount,rw /sysroot   （挂载sysroot 给予 、读写权限）
    chroot /sysroot/  （选择root账户）
    passwd root （修改密码）
    输入新密码 （密码强度不够的话需要输入两次）
    touch /.autorelabel (跳过内核检查)
    exit
    reboot  
#####################################################################################
远程传输文件  
scp 文件 root@对方ip ：存放位置
scp ‘/root/桌面/dachui.txt/’root@172.168.5.45:/root/桌面
###########################################################################################
远程链接  ssh -X root@ip地址 														
-X 表示显示图形化界面
find 在文件夹中查找文件
grep 在文件中查找内容
####################################################################################################
desktop IP 172.25.0.10 
server ip 172.25.0.11 
linux 中 加上文件的属性(.txt)是不影响文件的读取的,加后缀是为了给人看.

vim 命令模式下 
dd剪切(可以当删除使用)  用p可以粘贴出来
yy复制(光标放在行首)  5yy复制五行
p粘贴 

####################################################################################
AB两个机器的免密码登录 
原理: 
将A机器的公钥发送到B机器,B机器ssh登录A机器的时候就不需要 输入密码
将B机器的公钥发送到A机器,A机器ssh登录B机器的时候就不需要 输入密码
https://blog.csdn.net/u013948858/article/details/78252409
ssh-copy-id IP (传输公钥到制定的 ip)
###############################################################
ssh-keygen 产生 公钥和私钥
SSH 安全外壳协议 :在不安全的网络中提供安全远程登录以及其他安全网络   的协议
ssh配置文件:  	
ssh远程链接的配置文件 文件位置   sshd_config
cd /etc/ssh/

port 22: 默认使用22端口作为ssh的服务端口
Hostkey:存放私人秘钥文件
LoginGraceTime :若链接失败切断链接的等待时间
PermitRootLogin yes 用于root登录 yes (以后一定要修改为 no 不允许root登录)
PermitEmptyPasswords no  允许空密码登录 默认关闭 但是这个一定要设定为 开 也就是属性设置为 no
/root/.ssh/  know hosts 记录主机的登录相信
                 authrized
ssh-copy-id ip 将公钥发送到 对应的 IP上
更改了 配置文件后一定要重启服务

公钥和私钥的存储位置 
cd /root/.ssh
authorized_keys  id_rsa  id_rsa.pub 		 known_hosts
   公钥                     自己 公钥         已经链接过的ip的访问方式
#######################################################################################################

服务器架构
一.C/S client&server 架构
--由服务器提供资源或某种功能
--客户机使用资源或功能

TCP/IP 协议
最广泛支持的通信协议集合
--包含大量的Internet应用中的表中协议
--支持跨网络架构\和操作系统

主机间通信的三要素
-ip地址 ipaddress   :唯一表示网络中一个节点的地址(只要能连网的设备我们都可以称之为节点)
	 地址组成(点分十进制)
	 一共32个二进制数
	eg : 为win2008虚拟机配置 IP地址
	ip地址由两种位置分类: 网+主
	网络位 表示一个网络
	主机位 编号
	四类 
	A 1-127   网+主+主+主
	b 128-191 网+网+主+主
	C 192-223 网+网+网+主
	D 224-239  组播地址
	E 240-254  科研
-子网掩码 subnet mask
	用来区分ip地址的网络位和主机位
	利用二进制的1表示网络位
	利用二进制的0表示主机位
192.168.1.1 = 11000000.10101000.000001.000001
	       11111111.  11111111.  11111111.000000
子网掩码	255      255       255      0 
192.168.1.1 255255.255.0=192.168.1.1/24 该ip有24个网络位 
24 代表前边有连续的 24个1  , 8 个0  
网关地址 一个网络到另一个网络的关口 不同网段之间的访问
dns服务器地址 讲网站的域名解析为对应的 IP地址
#####################################################################
-IP路由 涉及路由器


python

1.语法循环 + class 类语言
2.数据库mysql +进程线程
3.web前端 + 后端         
4.web+pychon 
5.爬虫（全面的技能） 数据分析 机器学习 人脸识别 opencv模块
 
应用领域
1.系统运维
2.编程
3.科学计算
4.人工智能
5.GAME
6.数据分析

################################
计算机解释型语言（动态语言）： 编码—语言解释器—计算机解释执行
计算机非解释型语言（静态语言）编码—计算机解释执行
########################################
python
优点：胶水语言
缺点：执行速度慢 相对与静态语言、不能封闭源代码

 快捷键
　＃　注释　
快捷注释　ctrl + /
冻结终端　ctrl + s　 
取消冻结ctrl + q
创建多个光标　　单击＋ctrl   取消　esc
代码的上下移动　　ctrl +shift+ 方向键
#############################################
python 数据类型
1.　int()整数　不带小数的数字　包含自然数　0　负自然数
2. str()字符　所有的可输入的类型都是abc =+- \? 123456
3.float() 小数类型　 有小数的数字　小数部分可以为0
##############################################
type()检查字符类型
>>> y='2'
>>> type(y)
<class 'str'>
也可使用　int()str()float()进行类型转换
eg
s=str('11a')
############################
>>> s=str('11a')
>>> s*3
'11a11a11a'
>>> s=2
>>> s*3
6
>>> 

############################
print 函数
格式　print(想要输出的东西)

%d代替数字　
%s代替字符

变量
1.必须是一个标识符
2.必须以字母下划线开头，后跟字母或下划线
3.不能ｐｙｔｈｏｎ关键字　严格区分大小写
 比如　print  def 　if class  break 这些不适用于关键字
 A = 1 和　a = 1　
 asic 值是不一样的
查看当前作用与下所有变量　help('__main__')
q 退出　　
del　删除变量
input 输入函数
作用：从表准设备上读取一字符串
input('提示语句')　
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃　
if 语句
让程序根剧条件有选择的执行某些语句

格式　：　　　　　＝＝判断　　< > != 不等于
if  语句１
    elif　　　四个英文空格elif 之前    
    语句２　
    elif 
    语句３
    .......
    else
     语句n
ＮＯＴＥＳ：
     else 只能在最后面　有且只有一个
所有语句自上而下执行，当某个表达式子成立之后跳出判断体。
eg：判断str 类型时 在if/elif/else 中记得加 '' 
判断int float 类型时 不用加
who = str(input('人物：'))
if who == '糖糖':
    print('YES%s属于西游记' %who)
elif who == '空空':
    print('YES%s属于西游记' %who)
elif who == '沙沙':
    print('YES%s属于西游记' %who)
else:
    print('不属于西游记')
########################
 nu = int(input('输入数字：'))
 if nu == 1:#　如果要对比　ｓｔｒ类型的数据　要加‘’　eg:　if nu == 'a':　　
     print(nu)
 elif nu == 2:
     print(nu)
 elif nu == 3:
     print(nu)
 else:
     print('null')
range() 函数
生成一个可以的迭代对象的整数序列
ｅｇ：　range(10) 0 1 2 3 4 5 6 7 8 9
      range(1,10,2) --> 
格式　range(其实数字，结束数字，步长)
１．括号内只写一个数字，代表结束数字。默认步长为１，起始为０　
２．括号写俩个　代表开始结束
３． 三个数字　三个位置都有
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
for　、while 循环
　for 知道循环次数，或者限定循环次数
while 不知道循环次数　　无限循环
for 循环 
也叫　for in 循环
格式　ｆｏｒ　变量　ｉ　　　ｉｎ　可迭代对象：
    语句一
    ｅｌｓｅ　：
    语句二
语法说明：　变量依次绑定可迭代对象中的每个元素，然后执行语句一　，ｅｌｓｅ语句可省略
ＡＳＣＩ　码
命令行下　ｍａｎ　ａｓｃｉ
    转换函数　　ord(字)返回这个字对应的ＡＳＣＩ值　在Ｐｙｔｈｏｎ命令行下使用
    chr(数字)返回这个数字对应的ＡＳＣＩ对应的值在Ｐｙｔｈｏｎ命令行下使用
#######################@#####
切片　字符串　‘’　列表切片[]　元组切片（）

d[(开始引索):(结束引索):(步长)]＃＃＃＃＃括号里面的可以省略　包括括号　但是冒号不能
步长 :从左到右为正　反之为负数　
 s = 'ABCDE'
 a = s[::2]
数字是不能进行切片的　只有字符才能
###############################
函数
可以重复执行的代码模块　，减少代码量
语法　：　ｄｅｆ函数名　（参数列表）
        　　　语句模块
语法说明:   参数列表可以省略
        　　 函数名的命名方法和变量名一样
函数的调用： 函数名（）
＃＃＃＃＃＃＃＃＃＃＃＃
递归函数
函数直接或者间接调用自己本身实现和ｗｈｉｌｅ循环一样的功能
格式　：def fn()
        print('xxxx')
        fn()
     fn()
＃＃＃＃＃＃＃
ｅｇ：
import time

def hh():
    print('从前有座山，山里有座庙，庙里住着老和尚')
    time.sleep(0.5)#时间延时模块
    hh()
hh()

说明最大递归深度1ｋ层，超出报错
关于模块的说明
语句ｐｒｉｎｔ－－－＞语句块－－＞ 类－－－＞模块
