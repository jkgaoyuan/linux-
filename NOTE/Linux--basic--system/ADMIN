还原命令： rht-vmctl reset  电脑名
虚拟机： classroom  server  desktop  win
GPL 协议 (开源协议)
    1.随便复制
    2.随便修改
    3.随便发布
    4.具有继承性

程序 硬盘
进程 内存 在进程中可以启动多个线程
线程   (共享内存)

后台执行
ctrl + z  将当前任务放在后台并暂停
命令 &　后台执行　　
jobs 查看有多少后台任务
fg  将一个在后台暂停的命令，变成在后台继续执行
bg　后台中的命令调至前台继续运行
nohup 关闭当前的终端也执行（之前的&做不到）需要注意的试试nohub没有 后台的意思,所以要配合 & 来完成后台运行
eg:nohup COMMAND &
####################
debin       Redhat
dpkg        rpm
apt-get     yum
##################
配置ubuntu的 apt-get

/etc/apt/sources.list   //存放地址列表的配置文件
deb [web或ftp地址] [发行版名字] [main/contrib/non-free]
    deb http://archive.ubuntu.com/ubuntu/ bionic main restricted
    deb-src http://archive.ubuntu.com/ubuntu/ bionic main restricted

apt-get update 更新镜像
apt-get upgrande 更新软件
apt-get install package  安装软件
apt-get remove package  卸载软件(不删除配置文件)
apt-get purge package  卸载软件(删除配置文件)

###########################################
dpkg -i packagename  //安装
dpkg -r packagename  //卸载
dpkg -L packagename = rpm -ql  //列出软件包的详细详细
dpkg -l packagename = rpm -qa  //列出所有软件包
dpkg -S packagename  = rpm -qf /usr/bin/vim//验证文件所属的软件包

##########################################
RHEL6/7

6和7的不同:
服务启动 服务自启 运行状态切换

rhel 6
系统服务管理
    /etc/init.d/ 脚本目录
    /etc/init.d/name state
    /etc/init.d/name status
    /etc/init.d/name stop
    /etc/init.d/name restart
    /etc/init.d/name reload
服务自启
    chkconfig --list [name]  //查看服务自启状态(不设置运行级别,默认为全部级别)
    chkconfig --list   //查看所有进程自启状态
    chkconfig [--level 级别列表] 服务名 on  //开机自启 --leave 指定运行级别,不加默认全部
    chkconfig [--level 级别列表] 服务名 off
系统运行状态
    6和7 相同
    0-6 7个状态
    0 关机状态
    6 重启状态
    init3/5 3命令行多用户,5图形多用户
    1 单用户
    2 多用户模式，没有NFS网络支持。
    3 完整的多用户文本模式，有NFS，登陆后进入控制台命令行模式。
    4 系统未使用，保留一般不用，在一些特殊情况下可以用它来做一些事情。例如在笔记本电脑的电池用尽时，可以切换到这个模式来做一些设置。
    init 3 //切换到运行级别3

rhel7

服务状态
    systemctl -t service //查看当前所有启动服务
    systemctl -t service --all //查看当前所有服务(包括未启动的)
当前系统运行级别
    runlevel
    列出当前可以切换的运行级别
    systemctl -t target
    切换运行级别
    systemctl isolate 状态
    查看默认运行级别
    systemctl get-default
    设置默认运行级别
    systemctl set-default 状态
##########################################
linux系统启动中init 程序的作用
    linux系统和服务管理器
        -内核引导后加载的第一个初始化进程(PID=1)
        -负责掌握整个linux的运行/服务资源组合
    传统的init程序
        systmev 顺序加载
    systemd
        一个更加高效的系统&服务管理器
        开机启动服务,并启动各个系统服务间的精确依赖
        配置目录: /etc/systemd/system/
        服务目录: /lib/systemd/system/
        主要管理工具: systemctl


##########################################
Linux文件目录
/ 根  
/etc 存放系统配置文件（删掉的话无法正常启动）
/bin 系统程序文件
/boot 启动所需的文件
/dev 分区信息
/home 普通用户的家目录
/root 管理员的家目录（~）
/var 系统中大小经常变化的文件 比如 log
/
/opt 软件安装位置
Unix&Linux一切皆文件  
路径 /abc/nsd/1.txt
开头的 /是根目录 其他的/ 均为分隔符

/dev/
存放设备(硬盘\键盘\鼠标\显示器)相关数据的地方
/root :Linux中管理员的家目录
/home: 存放所有普通用户家目录  (他本身不是所有用户的家)
 / 表示 根 
 ~ 表示家目录 
 . 表示当前目录  常常与复制命令连用 
 ..表示父目录
Linux目录结构:树形结构   
最顶层为根目录
根目录   (/) 

                                                       /
bin       boot      dev      etc     home     root      run      sbin      tmp        usr          	 var
                                                  |                                                              |               	  | 
                                                  |                                                              |                	  | 
                                                  |                                                              |                 	  | 
                                          -----------------------------                                     ---------------------------------------         --------
                                | alice  bob  eve|                           | bin local  sbin  tmp|      |tmp|


##############################################

终端中颜色:
黑色表示 文件
蓝色表示目录
绿色:可以执行的文件 
青色:文件

man 外部命令
help 内部命令
命令一般分为内部命令和外部命令

内部命令: 集成在shell 中,根据shell种类不同所以 内部命令有时候也不同
enable 查看内部命令
enable -n 命令 //关闭内部命令


外部命令: 额外安装的命令,一般可以找到对应的 文件

hash
系统初始hash表我空 ,执行外部命令时会将命令读取到hash表中,
通过shell执行外部命令时会首先查找hash表中,若表中没有则根据path查找.
可以大大提高外部命令的执行速度.

Linux中表示上一级目录
cd ..
相当于Windows中的   后退 返回上一级

如何编写命令行

在Linux中执行命令,都要找到相应的程序,将程序运行

命令的执行依赖于解释器	 比如 /bin/bash
命令的执行依赖于解释器  默认的/bin/bash
内核: 调配计算机硬件资源 
用户的指令--------> 内核---------> 调配计算机硬件

Linux 命令分类 
	内部命令 属于解释器的一部分
	外部命令 解释器之外的其他程序
命令行的完整格式 
 基本用法  
 -命令字 [选项]... [参数1]  [参数2] ...
  cat /etc/redhat-release
  head -1 /etc/password
  cat ls 是不能直接查看设备文件的  
查看命令的帮助信息 
  word --help
  man word
选项,调控命令的执行方式
  短选项: -A -I -c -d
  多个短选项选项-------->复合选项 -IH 
  长选项  --help
###################################################
ftp://176.233.40.248/
账户 nsd1903	
     20190329


Unix&Linux一切皆文件  
路径 /abc/nsd/1.txt
开头的 /是根目录 其他的/ 均为分隔符

/dev/
存放设备(硬盘\键盘\鼠标\显示器)相关数据的地方


#########################################################################################
Linux磁盘表示  (面试题目常考)
命名规则
       				 /dev/sda
					  |      |		
 					 |     |           a 表示第一块磁盘  b表示第二块 以此类推  
        			      所在目录  sd:表示scsi 设备
                                      vd:表示虚拟设备
						 id:表示ide设备    
/dev/sda  scsi的第一块磁盘
/dev/sdb   第二块
/dev/sdc   第三块

切换到控制界面 
Ctrl+alt+Fn  
         F4  字符控制台
         F1  图形化界面

命令行提示符的意义:
[ root @ localhost  ~  ]#
  登录的账户 主机名      代表当前工作目录    表示当前登录的用户为root 管理员 普通的账户为$     
					[root@localhost ~]# pwd
					/root
					[gaoyuan@localhost ~]$ pwd
					/home/gaoyuan


ctrl+shift+ + 加大字体
ctrl +  -   缩小字体
使用&来连接两条命令 
[root@localhost ~]# cd 桌面&ls
[1] 22503
anaconda-ks.cfg       公共  视频  文档  音乐
initial-setup-ks.cfg  模板  图片  下载  桌面
[1]+  完成                  cd 桌面
ls -l 详解
文件的详细属性
    d  目录文件    -  普通文件      l  链接文件

    权限  ：  r  读    w  写   x 执行权限 
     属主    属组    其他人  
     rwx     r--      r-x
 	-a 列出所有文件，包括以 "." 开头的隐含文件。	
	-d 将目录名像其他文件一样列出 而不是列出他的内容..##只列出目录名
	-h 显示常用的单位 提供易读的单位
      -lh 显示详细属性时 加上单位大小   
	-A 显示目录全部内容,包括隐藏数据 .显示除 "." 和 ".." 外的所有文件。 后期写脚本的时候会常用-A ,-a由于显示 . ..会比较难匹配所以,不会用-a.
	-l 长格式显示
tab键 
       1. 按一次，补全命令或者路径
       2. 按两次，下来菜单，照着找
       3. 按一次，检查这个文件有没有

mkdir  文件夹 目录
       mkdir  -p  a/aa/aaa  #通过 -p参数来递归创建文件夹
touch   文件                #TOUCH 可以支持多个 选项 用来同时创建 文件
       touch 1.txt
       touch /root/1.txt /root/2.txt	
mv  移动
    格式：  mv  源文件   目的位置
    1.mv  可以移动文件
    2.mv  可以移动文件的同时改名
    3.mv  可以直接重命名（移动到当前路径下）  
移动时修改文件名
[root@room9pc01 ~]# ls
123456789        besic02               nu.txt           秋名山.txt  下载
a                bin                   original-ks.cfg  视频        音乐
anaconda-ks.cfg  initial-setup-ks.cfg  公共             图片        桌面
b                ll                    模板             文档
[root@room9pc01 ~]# mv 123456789 ll/sbc
[root@room9pc01 ~]# cd ll
[root@room9pc01 ll]# ls
1.txt  456.txt  sbc


    调去上一条命令的执行参数路径  esc+.   alt+.
cp 复制
   格式：  cp  源文件  目的位置
           1. 拷贝的过程中叶可以改名字  cp 1.txt /2.txt
           2. 拷贝文件夹需要加参数  -a
           3. 与mv的区别是一个源文件还在，一个不在。


   选项     -r 递归复制  递归地复制目录
            -p  保持原始文件的所有者，组，许可，和时间表属性。
            -a 复制时,尽可能保持文件的结构和属性.(但不保持目录结构)
练习：
      1.在自己家里创建一个a文件夹，在里面创建1.txt 2.txt 3.txt
            
         cd    mkdir a  cd a  touch 1.txt 2.txt 3.txt
      2. 移动题一中的3.txt 到/下，并且改名字为4.txt
             mv 3.txt /4.txt
      3. 在自己家里创建一个b文件夹，b文件夹中创建一个b文件，拷贝这个b文件到/tmp/b/bb/bbb中。
           mkdir b  cd b  touch b
           mkdir -p /tmp/b/bb/bbb
           cp b /tmp/b/bb/bbb


      4.在题3的bbb文件夹中，创建c.txt d.txt .然后把c.txt重命名为v.txt
         alt + .    cd  /tmp/b/bb/bbb   touch c.txt d.txt
            mv c.txt v.txt
#############################
鼠标

选中为复制   只在终端下有用  适用于所有的 linux系统 
滚轮 粘贴
rth- vmctl 命令名  虚拟机名
优先开启 classroom ###why? 提供服务啊 
rht-vmctl reset classroom   提供网关/dns/软件资源          172.25.0.255 
rht-vmctl reset server      作为练习服务器                     172.25.0.11   ID ROOT PASSWD redhat
rht-vmctl reset desktop     作为练习的客户机                  172.25.0.10  ID ROOT PASSWD redhat
子网划分 节约ipv4 地址
b类地址 + d 类子网掩码
ctlr+alt+f2 切换到字符模式

ctlr+alt+f1 回到gui模式
 ctrl + l 清屏
 ctrl + c 放弃当前命令行/ 结束当前命令行
 esc + . 或者alt + . 粘贴上个命令行的参数
 ctrl + u 清空至行首 
 ctrl + k 清空至行尾
 ctrl + w  往回删除一个单侧 (以空格界定)
 ctrl + d  相当于exit
##########################
通配符
* 任意多个任意字符 
? 只配一个,且必须要有
[a-b] 多个字符或连续范围中的一个
{a,b,c} 多组不同的字符串,全匹配
ls /etc/r*.conf 
以r开头,conf 结尾 
	[root@jkgao ~]# ls /etc/r*.conf
	/etc/radvd.conf        /etc/resolv.conf 
ls /etc/*abc*
只要包含abc  
ls /dev/tty??
tty结尾 必须要有两位 
	[root@jkgao ~]# ls /dev/tty??
	/dev/tty10  /dev/tty20
#########################
	[root@jkgao ~]# ls /dev/tty[1-8]
	/dev/tty1  /dev/tty3  /dev/tty5  /dev/tty7
	/dev/tty2  /dev/tty4  /dev/tty6  /dev/tty8
	[root@jkgao ~]# ls /dev/tty[1-11]    #############################3这里为什么不显示 大于十的部分能 因为Linux只定义了10 一下的
	/dev/tty1
	[root@jkgao ~]# ls /dev/tty[3-6]
	/dev/tty3  /dev/tty4  /dev/tty5  /dev/tty6
	[root@jkgao ~]# ls /dev/tty{1,3,5,8,9}
	/dev/tty1  /dev/tty3  /dev/tty5  /dev/tty8  /dev/tty9
	[root@jkgao ~]# ls /dev/tty{[1-5],[6-8]}
	/dev/tty1  /dev/tty3  /dev/tty5  /dev/tty7
	/dev/tty2  /dev/tty4  /dev/tty6  /dev/tty8
#################################################
eg
	touch 1.txt 12.txt 13.txt 123.txt 456.txt
	[root@room9pc01 ll]# ls
	123.txt  12.txt  13.txt  1.txt  456.txt
	[root@room9pc01 ll]# rm -rf 1?.txt
	[root@room9pc01 ll]# ls
	123.txt  1.txt  456.txt
	[root@room9pc01 ll]# touch 145.txt
	[root@room9pc01 ll]# ls
	123.txt  145.txt  1.txt  456.txt
? 配一位
* 全部
##########################################

cat head tail   

cat -n //  ;查看文件 显示行号:
head -n //  ;查看文件 前几行 
tail -n //   ;查看文件 尾部 几行  n表示 你要显示几行#####默认 显示前10行 tail 同上
############################################
grep 关键字 目的文件  ；
grep root  /etc/passwd
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin

grep -v ^$ /etc/chrony.conf  -v 取反 

grep ^$ /etc/passwd	^$ 匹配空行
grep ^root /etc/passwd  ^匹配 root 开头的 
grep login$ /etc/passwd |tail -4   ;  $匹配 以 login 结尾,且之显示四行
#########################################################
管道 |   将上一条命令执行的结果交给下一条命令执行  类似于桥梁的作用 没有数量限制 ###重要
eg：
cat /etc/passwd | grep root

root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin

cat /etc/passwd | wc -l 计数 
42

cat -n /etc/passwd | head -15 |tail -6   带行号输出
    10	operator:x:11:0:operator:/root:/sbin/nologin
    11	games:x:12:100:games:/usr/games:/sbin/nologin
    12	ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
    13	nobody:x:99:99:Nobody:/:/sbin/nologin
    14	systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin
    15	dbus:x:81:81:System message bus:/:/sbin/nologin

cat -n /etc/passwd | head -15 |tail -6 |wc -l  配合计数使用  ###cat -n 显示行号
6
##################################################################3
重定向
     前边命令的输出 写入到指定文本文件中,若指定文本文件不存在会自动创建
    
>    覆盖重定向  直接覆盖原文件

[root@room9pc01 home]# echo 123 > 1.txt
[root@room9pc01 home]# cat 1.txt 
123
[root@room9pc01 home]# echo 456 > 1.txt
[root@room9pc01 home]# cat 1.txt 
456

>>  追加重定向    保留源文件 在最后追加

[root@room9pc01 home]# echo 123 >>1.txt
[root@room9pc01 home]# cat 1.txt 
456
123
[root@room9pc01 home]# echo 789 >>1.txt
[root@room9pc01 home]# cat 1.txt 
456
123
789
############################################
echo  复读机 只会显示 echo后面输入的字符 
	配合重定向 快速修改 文件信息
	[root@jkgao gaoyuan]# echo lolo > /opt/hn.txt 
	[root@jkgao gaoyuan]# cat /opt/hn.txt
	lolo

	[root@jkgao gaoyuan]# echo lolo
	lolo
    [student@room9pc01 linux-]$ echo -e "123\n321" #换行输出
	123
    321
    [student@room9pc01 linux-]$ echo -e "123\t321" #加入tab
    123     321
#####################
vim编辑器

vim 命令模式下 
dd剪切(可以当删除使用)  用p可以粘贴出来
yy复制(光标放在行首)  5yy复制五行
p粘贴 
vim 命令模式进入插入模式 可以按 o 另起新的一行


命令模式 	批量操作，复制粘贴    i 进入插入模式 esc 推出 进入命令模式； 按两次 esc 进入 末行模式 wq 退出 q！推出不保存 ！强制执行
					从光标位置开始往下操作，
	命令模式下执行			复制      数字+yy  光标下几行需要复制，不是复制多少行
					粘贴      p
					删除      数字+dd  删除了数字行
					全文查找 /关键字  
					撤销     u
					反撤销   ctrl+r
					退出保存 shift+zz
					跳最后一行 shift + g
插入模式 	写入文档
末行模式 	保存退出  wq 退出保存 q！退出不保存 
set nu 显示行数 
：6 快速移动到某一行  移动到第6行
                    查找替换(常用)
                    :s
                    :s/vivian/sky ###替换当前行第一个vivian 为 sky
                    :s/vivian/sky/g ###替换当前行所有vivian 为 sky
                    :n,$s/vivian/sky ###替换第n行到最后一行的每一行的第一个vivian 为 sky
                    :n,$s/vivian/sky/g ###替换第n行到最后一行的每一行的每一个vivian 为 sky
                    一般来说 n 为数字 ,当 n 的值为 '.' 时 从当前行,到最后一行
                    将文件直接导入本文件
                    :r  文件路径   #############注意光标的位置,会直接将文件放在光标之后 导入文件
#####################################################
远程控制
teamviewer
win  cmd 命令
mstwc
跨平台 win +linux
tigervnc
xshell

ssh -X root@server0.example.com  :-X 调用图形界面 ##server0.example.com 域名
#########################################################
tar 打包压缩
linux 压缩格式:
	gzip(特点速度快,效率底) -----------> .gz
	bzip2---------------------------> .bz2
	xz(特点速度慢,效率高,)---------------> .xz
选项 
	-c 创建归档
	-x 释放归档
	-f 指定tar包的文件名
	-z -j -J  分别调用.gz .bz2 .xz 格式工具进行处理
	-t 显示归档中的文件清单
	-C 指定路径释放
	-v 解压时显示过程
注意 连用时f一定要写在所有选项之后
tar 所有选项都需要有 f 选项
显示
打包
      选项  /路径/新包的名字     
tar -zcf  xxx.tar.gz    需要打包的文件名 #######
tar -jcf  xxx.tar.bz2    需要打包的文件名 #######
tar -Jcf  xxx.tar.xz    需要打包的文件名 #######
解压
          需要解压包得名字
tar -xf xxx.tar.gz 解压到当前位置
tar -xf xxx.tar.gz -C /指定解压缩位置  大写C 小写识别
##################################
分号  ;
命令 接着执行 多条命令 
eg mkdir pp ; touch xixi
#####################
管理用户和组
用户	1.登录操作系统	
	2.方便对不同用户进行访问控制
组      方便管理用户
用户唯一标识: UID  从0 开始的
组唯一标识: GID  从0 开始
Linux系统管理的uid 永远为0 
	[root@jkgao gaoyuan]# id root
	uid=0(root) gid=0(root) 组=0(root)
创建普通用户

useradd 用户名
useradd 选项 用户名
常用的选项  
-u用户id  指定uid (uid有极限)
	新用户uid默认上个用户uid+1
-d 家目录路径  指定家目录默认在/home/下 
	[root@jkgao gaoyuan]# useradd -d /mnt/nsd01 nsd01
						   家目录	用户名
-s登录解释器 
	[root@jkgao gaoyuan]# useradd -s /sbin/nologin haha
	[root@jkgao gaoyuan]# grep haha /etc/passwd 
	haha:x:1002:1002::/home/haha:/sbin/nologin

查看解释器
[root@jkgao gaoyuan]# cat /etc/shells 
				/sbin/nologin #禁止用户登录系统,非删除用户
-G 附加组
1.查看用户基本信息 id  id 用户名  
	[root@room9pc01 home]# id Student
	uid=1000(Student) gid=1000(Student) 组=1000(Student)
2.查home ls /home/

	
3.查文件   grep nsd01 /etc/passwd
用户的基本信息存放在  /etc/passwd 
/etc/passwd	属于系统级 配置文件 
	root:	x	 :0		:0:		root:			/root:	/bin/bash
       用户名 密码占位符 用户的UID	基本组的GID   用户描述信息可以为空   家目录         解释器
#############
删除用户 
	
userdel 用户名
userdel -r 用户名 #连通用户的的家目录一起删了(工作中尽量不会用这命令)
1.删除家 rm -rf /home/xixi
2.       vim
切换 用户 
su 用户名
su -c 传递command 给shell
              -c, --commmand=COMMAND
              传递单个COMMAND给-c的shell.
eg: su -c "/usr/local/tomcat/bin/startup.sh"  tomcat  //让 startup.sh 由  Tomcat执行
##############################################
删除
	rm- Remove   删了 真的就没了
格式 rm [选项]  文件/目录
常用选项 -r 递归删除 ,目录以及目录下所有
       -f 强制删除 
	 -i 提示信息 
###################################################
创建组 
基本组:与用户同名且由系统创建并将用户默认添加到该组(为了满足Linux默认的用户只属于一个组)
附加组(从属组): 由管理员创建并管理 
groupadd xixi
groupdel xixi
思路:创建组 创建用户时指定附加组

	[root@jkgao gaoyuan]# groupadd tarena #创建组
	[root@jkgao gaoyuan]# useradd -G tarena nsd03 #指定组并创建用户nsd03
	[root@jkgao gaoyuan]# id nsd03
	uid=1003(nsd03) gid=1004(nsd03) 组=1004(nsd03),1003(tarena)  
		用户id		基本组id	     附加组id
#########################################
管理组
存在组基本信息的文件 /etc/group 文件
由于没有直接查看组命令 所以使用grep查看
[root@jkgao gaoyuan]# grep stugrp /etc/group
stugrp:x:1005:
组名:密码占位符:组的成员列表
groupadd 组名
属性
-g  
groupadd [-g] 组名 
##################################3
管理组成员
gpasswd   
gpasswd -a 用户名 组名 添加
gpasswd -d 用户名 组名  删除

#############################################
删除组 
groupdel
groupdel 组名
不能删除住组 附属组可以删除
删除组不影响 用户存在
####################################
设置密码
 passwd 用户名
输入密码 两次
[root@jkgao gaoyuan]# passwd nsd03
更改用户 nsd03 的密码 。
新的 密码：
root用户在执行时 不需要 输入原密码 ,且设置的密码不需要符合密码字典的要求
普通用户可以修改自己的密码 并且密码必须符合密码字典的要求,
普通用户是无法修改与自己平级账户的密码的
 su - nsd03 
非交互式设置密码
必须 root 用户执行这条命令
echo 123 | passwd --stdin nsd03 (--stdin 取消passwd的交互功能##echo 之后为密码)
##########################################
登录密码 保存文件 
默认 root 才有权限阅读
/etc/shadow  系统文件
	(了解)
	[root@jkgao gaoyuan]# head -1 /etc/shadow
	root:$6$N2mU7M8m$mBO2wcqpI09Y/KlVTsIZJonkqKp948r/AyA9JUf0CoVE7GdPBZf5xyThSR40Pcwq6M8muh3n.Y/Xld0LCBZce.:17988:0:99999:7:::
	用户  :     密码加密字符串                                  : 上次修改密码的时间,从1970-1-1到修改密码的时间的天数: 密码可存在的天数:提前7天警告密码快失效了:用户永远不过期
修改用户属性 (只能修改已存在)
usermod 
选项  和 useradd 相同
-u 修改uid
-G 修改附属组
-d 修改家目录
-s 修改解释器		
[root@jkgao gaoyuan]# usermod -u 1700 -G tarena -s /sbin/nologin nsd11
 
###########################
命令别名 （临时别名）
alias
 别名=‘实际执行的命令’
别名定义 
	alias if="ifconfig"
	alias ho="hostname"
查看别名 alias 
取消别名 unalias
############################################################

###############################永久别名
配置用户环境
 开启新终端后生效
  影响指定用户的bash 解释器
  ~ /.bashrc,每次开启bash 终端生效 ####注意这是一个隐藏文件
  [root@server0 ~]# vim /root/.bashrc 修改root 用户的
  [student@gao ~]$ vim /home/student/.bashrc   $####修改用户studen 的bash .添加别名
	  alias gos='ssh -X root@172.25.0.11'
	#mount | grep qemu &> /dev/null
	alias god='ssh -X root@172.25.0.10'

  影响所有用户的 bash 解释器
  [root@server0 ~]# vim /etc/bashrc
###################################

cp复制 
	cp 选项 源文件
	cp可以支持两个以上的参数,永远会把最后一个参数作为目标其他所有参数都会作为源.也就是他会把 前边的所有文档\目录 拷贝到最后一个文件夹
常用选项 
	-r 递归,复制目录以及目录下文件时 需要添加  #重要,比较常用
	-i 提示信息   由于 系统已经自定义了系统级别的别名 ,所以在覆盖文件的时候会不断提示
	-p 保持源文件的属性不变 复制 (属主 属组 权限  )
	[root@jkgao 桌面]# alias
	alias cp='cp -i'
	但是我们可以使用 \ 可以在本次 命令中临时取消 别名 
	[root@jkgao 桌面]# \cp -r /boot/ /桌面
	复制时可以重新命名目标路径下的名称
	eg:
	[root@jkgao nsd01]# cp /etc/passwd ./nsd
	[root@jkgao nsd01]# ls
	0  nsd  passwd
	[root@jkgao nsd01]# 
	#######  ########提问这两次 cp操作有什么不同
	[root@jkgao nsd01]# rm -rf /opt/*
	[root@jkgao nsd01]# cp -r /home/ /opt/test  ########本次复制home到opt 并改名为 test######opt中为空
	[root@jkgao nsd01]# cp -r /home/ /opt/test  ########本次复制home到opt/test中 ##########这次opt中已经有了名为test的文件夹
	[root@jkgao nsd01]# ls
	[root@jkgao nsd01]# ls /opt/
	test
	[root@jkgao nsd01]# ls /opt/test/
	2  gaoyuan  home
	[root@jkgao nsd01]# 

####################################
 . 表示当前目录  常常与复制命令连用 
 ..表示当前目录的父目录
eg:
	[root@jkgao opt]# cd nsd01/0/
	[root@jkgao 0]# ls
	[root@jkgao 0]# cp -r /etc/passwd .
	[root@jkgao 0]# cp -r /etc/passwd ..
	[root@jkgao 0]# ls
	passwd
	[root@jkgao 0]# cd ..
	[root@jkgao nsd01]# ls
	0  passwd
##############################################################
破解用户密码（rhce考试第一步）
1.
重启系统 在系统启动过程中内核选择部分 按 E  进入单用户模式
2.
找到Linux 16 的一行 在末端输入 rd.break console=tty00
3. Ctrl+x 
4.  输入
    　　　　　　重新挂载赋予读写权限　
　　mount -o remount,rw /sysroot   （挂载sysroot 给予 、读写权限）
    chroot /sysroot/  （选择root账户）
    passwd root （修改密码）
    输入新密码 （密码强度不够的话需要输入两次）
    touch /.autorelabel (跳过内核检查和ＳＥＬｉｎｕｘ相关)
    exit
    reboot  
#####################################################################################
远程传输文件  
scp 文件 root@对方ip ：存放位置
scp ‘/root/桌面/dachui.txt/’root@172.168.5.45:/root/桌面
推荐使用rsync
rsync 文件 root@对方ip ：存放位置    -pgo 保持文件权限，保持用户主，保持用户组 不变
rsync /etc/yum.repos.d/local.repo root@$i:/etc/yum.repos.d/local.repo
        -avSXH
-v, --verbose 详细模式输出
-q, --quiet 精简输出模式
-c, --checksum 打开校验开关，强制对文件传输进行校验
-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD
-r, --recursive 对子目录以递归模式处理
-R, --relative 使用相对路径信息
-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。
--backup-dir 将备份文件(如~filename)存放在在目录下。
-suffix=SUFFIX 定义备份文件前缀
-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)
-l, --links 保留软链结
-L, --copy-links 想对待常规文件一样处理软链结
--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结
--safe-links 忽略指向SRC路径目录树以外的链结
-H, --hard-links 保留硬链结
-p, --perms 保持文件权限
-o, --owner 保持文件属主信息
-g, --group 保持文件属组信息
-D, --devices 保持设备文件信息
-t, --times 保持文件时间信息
-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间
-n, --dry-run现实哪些文件将被传输
-W, --whole-file 拷贝文件，不进行增量检测
-x, --one-file-system 不要跨越文件系统边界
-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节
-e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步
--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息
-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件
--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件
--delete 删除那些DST中SRC没有的文件
--delete-excluded 同样删除接收端那些被该选项指定排除的文件
--delete-after 传输结束以后再删除
--ignore-errors 及时出现IO错误也进行删除
--max-delete=NUM 最多删除NUM个文件
--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输
--force 强制删除目录，即使不为空
--numeric-ids 不将数字的用户和组ID匹配为用户名和组名
--timeout=TIME IP超时时间，单位为秒
-I, --ignore-times 不跳过那些有同样的时间和长度的文件
--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间
--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0
-T --temp-dir=DIR 在DIR中创建临时文件
--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份
-P 等同于 --partial
--progress 显示备份过程
-z, --compress 对备份的文件在传输时进行压缩处理
--exclude=PATTERN 指定排除不需要传输的文件模式
--include=PATTERN 指定不排除而需要传输的文件模式
--exclude-from=FILE 排除FILE中指定模式的文件
--include-from=FILE 不排除FILE指定模式匹配的文件
--version 打印版本信息
--address 绑定到特定的地址
--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件
--port=PORT 指定其他的rsync服务端口
--blocking-io 对远程shell使用阻塞IO
-stats 给出某些文件的传输状态
--progress 在传输时现实传输过程
--log-format=formAT 指定日志文件格式
--password-file=FILE 从FILE中得到密码
--bwlimit=KBPS 限制I/O带宽，KBytes per second
-h, --help 显示帮助信息
###########################################################################################
远程链接  ssh -X root@ip地址 														
-X 表示显示图形化界面
find 在文件夹中查找文件
grep 在文件中查找内容
####################################################################################################
desktop IP 172.25.0.10 
server ip 172.25.0.11 
linux 中 加上文件的属性(.txt)是不影响文件的读取的,加后缀是为了给人看.


####################################################################################
AB两个机器的免密码登录 
原理: 
将A机器的公钥发送到B机器,B机器ssh登录A机器的时候就不需要 输入密码
将B机器的公钥发送到A机器,A机器ssh登录B机器的时候就不需要 输入密码
https://blog.csdn.net/u013948858/article/details/78252409
ssh-copy-id IP (传输公钥到制定的 ip)
-i 指定公钥文件
若命令执行失败,提示被拒绝去请检查权限
.ssh目录，以及/home/ 当前用户 需要700权限
.ssh目录下的authorized_keys文件需要600或644权限
###############################################################
ssh-keygen 产生 公钥和私钥

-b：指定密钥长度；
-e：读取openssh的私钥或者公钥文件；
-C：添加注释；
-f：指定用来保存密钥的文件名；
-i：读取未加密的ssh-v2兼容的私钥/公钥文件，然后在标准输出设备上显示openssh兼容的私钥/公钥；
-l：显示公钥文件的指纹数据；
-N：提供一个新密语；
-P：提供（旧）密语；
-q：静默模式；
-t：指定要创建的密钥类型。

产生  id_rsa
ssh-keygen -f /root/.ssh/id_rsa -N ''
SSH 安全外壳协议 :在不安全的网络中提供安全远程登录以及其他安全网络   的协议
ssh配置文件:  	
ssh远程链接的配置文件 文件位置   sshd_config
cd /etc/ssh/

port 22: 默认使用22端口作为ssh的服务端口
Hostkey:存放私人秘钥文件
LoginGraceTime :若链接失败切断链接的等待时间
PermitRootLogin yes 用于root登录 yes (以后一定要修改为 no 不允许root登录)
PermitEmptyPasswords no  允许空密码登录 默认关闭 但是这个一定要设定为 开 也就是属性设置为 no
/root/.ssh/  know hosts 记录主机的登录相信
                 authrized
ssh-copy-id ip 将公钥发送到 对应的 IP上
更改了 配置文件后一定要重启服务

公钥和私钥的存储位置 
cd /root/.ssh
authorized_keys  id_rsa  id_rsa.pub 		 known_hosts
   公钥                     自己 公钥         已经链接过的ip的访问方式
#######################################################################################################

服务器架构
一.C/S client&server 架构
--由服务器提供资源或某种功能
--客户机使用资源或功能

TCP/IP 协议
最广泛支持的通信协议集合
--包含大量的Internet应用中的表中协议
--支持跨网络架构\和操作系统

主机间通信的三要素
-ip地址 ipaddress   :唯一表示网络中一个节点的地址(只要能连网的设备我们都可以称之为节点)
	 地址组成(点分十进制)
	 一共32个二进制数
	eg : 为win2008虚拟机配置 IP地址
	ip地址由两种位置分类: 网+主
	网络位 表示一个网络
	主机位 编号
	四类 
	A 1-127   网+主+主+主
	b 128-191 网+网+主+主
	C 192-223 网+网+网+主
	D 224-239  组播地址
	E 240-254  科研
-子网掩码 subnet mask
	用来区分ip地址的网络位和主机位
	利用二进制的1表示网络位
	利用二进制的0表示主机位
192.168.1.1 = 11000000.10101000.000001.000001
	       11111111.  11111111.  11111111.000000
子网掩码	255      255       255      0 
192.168.1.1 255255.255.0=192.168.1.1/24 该ip有24个网络位 
24 代表前边有连续的 24个1  , 8 个0  
网关地址 一个网络到另一个网络的关口 不同网段之间的访问
dns服务器地址 讲网站的域名解析为对应的 IP地址
arp -a 查看ip地址
#####################################################################
-IP路由 涉及路由器

############################################################################################

cat /etc/redhat-release　#查看系统版本
cat /etc/issue


lscpu 查看cpu信息
cat /proc/meminfo 查看内存 空闲情况
	[student@gao ~]$ head -1 /proc/meminfo 
	MemTotal:       16329888 kB
poweroff 关机
reboot  重启
###########################################################
查看主机名 hostname 
修改主机名 hostname jkgao  (临时修改主机名 重启后 恢复)
修改完成后 打开新终端 才会显示新主机名
################################################################
cat /etc/redhat-release　#查看当前系统版本 适用于 Redhat系列的Linux
cat /etc/issue    	 全版本的 Linux 都可以
https://www.cnblogs.com/wzk-0000/p/7483262.html
########################################
查看网络信息  ifconfig	

ifconfig eth0 192.168.1.1 为eth0 设置临时 IP
############################################
永久设置主机名\IP地址\子网掩码\网关\DNS服务器地址  nmtui  
 GUI 界面
修改ip后需要勾选自动连接 启用禁用后(激活配置)

##########
配置ip
一共会学到三个方法来配置 ip 这是第一个  但是nmtui 这个命令是会在安装系统后删除....所以目前常用的命令是 用脚本 来配置  

#########################################################
本地回环接口 (测试用大部分 win 安卓 Linux 中都有)
inet 127.0.0.0 netmask 255.0.0.0 这个ip永远代表本机 

linux 中的 ping 命令 (没有特殊情况:比如 对方掉线)是不会自己停下了的 需要自己手动停止
############################################
当文件内容较多的时候可以使用 
less 查看 (大文件)
q 退出  用法和vim 编辑器的末行模式类似  :/ a 表示查找包含a字符的文字
支持前后翻页 
[gaoyuan@jkgao ~]$ less /etc/passwd 

当文件内容少时可以使用 cat查看 
查看文件部分内容
head&tail
显示头十行
	[student@gao ~]$ head /etc/passwd |grep bin ####################默认显示前十行
	root:x:0:0:root:/root:/bin/bash
	bin:x:1:1:bin:/bin:/sbin/nologin
	daemon:x:2:2:daemon:/sbin:/sbin/nologin
	adm:x:3:4:adm:/var/adm:/sbin/nologin
	lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
	sync:x:5:0:sync:/sbin:/bin/sync
	shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
	halt:x:7:0:halt:/sbin:/sbin/halt
	mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
	operator:x:11:0:operator:/root:/sbin/nologin
	[student@gao ~]$ head -2 /etc/passwd |grep bin  ###########显示头两行
	root:x:0:0:root:/root:/bin/bash
	bin:x:1:1:bin:/bin:/sbin/nologin
tail用法类似
	[student@gao ~]$ tail -2 /etc/passwd |grep bin
	student:x:1000:1000::/home/student:/bin/bash
	weekend:x:1001:1001::/home/weekend:/bin/bash
	###########################################  显示第一行内存信息
	[student@gao ~]$ head -1 /proc/meminfo 
	MemTotal:       16329888 kB
grep 查找 
格式  grep 条件 目标文件
	       属性
		 -i 忽略大小写 
	     -v 取反查找  关键字之外的都显示
		-^word 必须以字符串word 开头
		-word$ 必须以字符串word 结尾
	student@gao ME]$ grep ^root /etc/passwd
	root:x:0:0:root:/root:/bin/bash
	[student@gao ME]$ grep bash$ /etc/passwd
	root:x:0:0:root:/root:/bin/bash
	student:x:1000:1000::/home/student:/bin/bash
	weekend:x:1001:1001::/home/weekend:/bin/bash
        #保留有效信息 除去空行 除去#开头
	[root@server0 ~]# grep -v ^$ /etc/chrony.conf |grep -v ^# /etc/chrony.conf | >> /opt/a.txt
#################################################### 
	-v 取反查找  关键字之外的都显示
	[student@gao ME]$ grep -v root /etc/passwd |head -5
	bin:x:1:1:bin:/bin:/sbin/nologin
	daemon:x:2:2:daemon:/sbin:/sbin/nologin
	adm:x:3:4:adm:/var/adm:/sbin/nologin
	lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
	sync:x:5:0:sync:/sbin:/bin/sync
#################################################
	[student@gao ~]$ grep bin /etc/passwd
	root:x:0:0:root:/root:/bin/bash
	bin:x:1:1:bin:/bin:/sbin/nologin
	daemon:x:2:2:daemon:/sbin:/sbin/nologin
	adm:x:3:4:adm:/var/adm:/sbin/nologin
	lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
	sync:x:5:0:sync:/sbin:/bin/sync
	shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
	halt:x:7:0:halt:/sbin:/sbin/halt
	mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
	operator:x:11:0:operator:/root:/sbin/nologin
	games:x:12:100:games:/usr/games:/sbin/nologin
	ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
	nobody:x:99:99:Nobody:/:/sbin/nologin

####################################################
mount 挂载 操作 :让目录成为设备访问点
mount 设备目录 挂载点目录
	[root@jkgao gaoyuan]# mount /dev/cdrom dvd/  #该命令需要root权限操作
	[root@jkgao gaoyuan]# umount dvd/ #卸载挂载点 ,不要的当前挂载点内执行
默认以只读的方式挂载 
	注意:
	1.当前路径不要在挂载点目录内 
	2.允许一个设备有多个不同挂载点
	3.一个挂载点不允许挂载多个设备
	4.挂载点最好使用自己创建的目录,虽然Linux只是规定了挂载点是目录,也就是说可以使用 /root/这种比较特殊的文件夹 ,但是在卸载的时候就会提示目标正忙
安装软件  前提是先得有软件的安装包
	1. 互联网下载
	2. 从光盘中获得安装包
#####################################################
Windows 读取光盘内容

光盘----> 光驱设备 ----->cd驱动器图标(访问点)

如何让Linux系统读取 光盘的内容 
光盘 ------>光驱 
光盘----> 光驱设备 ----->目录(Linux规定)
  /dev/hdc   ####ide
   /dev/sr0  #### sata
	1.图形利用鼠标 将光盘放入 虚拟光驱
	2.命令行查看光驱设备  Linux下通过/dev/cdrom
	[gaoyuan@jkgao ~]$ ls -l /dev/cdrom
	lrwxrwxrwx. 1 root root 3 4月   3 10:59 /dev/cdrom -> sr0



19.4.8 权限和归属
#####################################  
远程管理
ssh root@172.25.0.11
ssh -Xroot@ip 
ctrl + shift + t 开启终端
ctrl + d (退出)关闭终端
  -X 在远程管理时打开图形化界面 
root 不受权限管理
权限和归属
	 权限分类: 基本权限 附加权限 acl访问控制 

	1.基本权限
	    基本权限的类别
	      读取 -r read
	      写入 -w write
	      执行 -x execute (能不能运行程序执行)
	    文本文件: 
		4 r: cat less head tail
		2 w: vim 修改且保存 重定向 >  >>
		1 x:shell 脚本除外(里面写代码) ######一般linux认为任何文本文件不具有执行权限(也就是说默认没有执行权限)
	    权限适用对象
		-所有者:拥有此文件/目录用户 -user  -u
		-所属组:拥有此文件/目录的组 -group  -g
		-其他用户:出所有者\所属组之外的用户-other -o
		dr-xr-x---. 18 root root 4096 4月   8 10:52 /root/
         	d目录
		-   rw- r--    r--  . 1           root     root  2005 7月  11 2014 /etc/passwd
           -文本文件 主组 所属组 其他人 软连接(硬链接) 所有者(属主) 所属组 最后修改时间  文件位置 
		l快捷方式
		除第一个外,每三个为一组共分为三组   
		----------. 1 root root 1148 7月  11 2014 /etc/shadow
		文件 什么权限都没 但是挡不住root
		d rwx rwx rwt . 22 root root 4096 4月   8 11:52 /tmp/
                     t附加权限
         查看权限
		ls -ld
		权限 :所有者>所属组>其他人
		其他系统的权限是叠加的Linux不是  计算机是顺序执行的,
	         判断用户 信息
 		 id userid
		 判断文件的权限 
		 ls -ld /xxxxx
		 相互比对

	设置基本权限
		使用chmod 
		基本权限的改变是立即生效的
		-chmod 所属组+ - = (重新赋予权限) 权限
		-R 递归 #################################33Linux中权限默认没有继承 的说法(Windows) 父目录的权限与子目录的权限无关
		eg:		
		[root@server0 ~]# chmod -R o=--- /opt/aa
		[root@server0 ~]# ls -ld /opt/aa
		drwxr-x---. 3 root root 15 4月   8 14:15 /opt/aa
		[root@server0 ~]# ls -ld /opt/aa/bb/
		drwxr-x---. 3 root root 15 4月   8 14:15 /opt/aa/bb/

 	     eg:
		[root@server0 ~]# chmod u=rwx,g=r,o=--- /nsd01/
		[root@server0 ~]# ls -ld /nsd01/ 
		drwxr-----. 2 root root 6 4月   8 14:04 /nsd01/

		r 权限 能够ls 浏览
		 x 权限可以使用cd命令的
		 w 权限可以使用 rm mv cp mkdir touch 等命令(修改文件内容的操作)
		
	设置文档归属
		chown
		-R 递归修改 属主 属组 
		chown [-R] 属主 位置
		chown [-R] 属主:属组 位置
		chown ceph.ceph /dev/vdb1 (用这个修改磁盘 是零时的  重启后失效)　永久修改需要修改配置文件 vim /etc/udev/rules.d/70-vdb.rules 该文件需要创建
		归属选项修改 需要注销后生效
	
	2.附加权限(特殊权限)
	        Set GID (常考)
			 -附加在属组的 X 位上
			 -属组的权限变为s  #####
			-chmod   + - = s 
			-适用于目录,可以使目录下新增(父目录有setgid)的文档(文件和文件夹)(影响未来)自动的设定与父目录相同的属组
		        -继承所属组身份
			r-S 表示没有执行权限
			r-s 表示有执行权限
		 Sticky Bit (不常用)
			附加在其他人的 x 位上
			-其他人的权限表示变为t
			-适用于开放w 权限的目录,防止用户滥用 w权限 ,限制用户修改其他人文件
			# mkdir /home/public/
			# chmod ugo=rwx /home/public/ 

			# chmod o+t /home/public/

		  Set UID (简单的攻击手段,防护用得少) 了解
			-附加在属主的 X 位上
			-适用于可执行文件,setuid可以让使用者具有文件属主的身份以及部分权限

			
	3.acl访问控制表(acl访问策略) 优先于基本权限和附加权限
		能够对个别用户\个别组设置独立的权限
	acl 策略的作用
		文档归属的局限性
		-任何人只属于三种角色: 属主\属组\其他人
		-无法实现更精细的控制
		优点
		 能够对个别用户、个别组设置独立的权限
		 大多数挂载的EXT3/4、XFS文件系统默认已支持
	设置acl访问控制策略
		查看-getfacl 文档
		设置-setfacl [-R] -m u:用户名: 权限类别 文档
		设置-setfacl [-R] -m g:组名: 权限类别 文档
		    setfacl [-R] -b 文档...               #删除所有ACL策略
		    setfacl [-R]-m u:用户名   文档...      #删除单条指定ACL策略
		删除 setfacl  -x :删除指定用户的acl
    umask 值 决定了 用户默认创建 的文件 的 权限
    [root@server0 ~]# umask
    0022   root用户 默认
                            默认权限
    目录 最大权限 777 - 0022  755
    文件 最大权限 666 - 0022  644
    which hostname  ###查找 命令的软件的存放位置
    [root@server0 ~]# which hostname
    /usr/bin/hostname

################################################
	实现lisi用户可以读取/etc/shadow文件内容，您有几种办法?

	1.修改其他人权限　　
		 chmod  o+r  /etc/shadow
	2.利用所属组
		 chown :lisi /etc/shadow
		 chmod  g+r  /etc/shadow
	3.利用所有者
		 chown  lisi /etc/shadow
		 chmod  u+r  /etc/shadow
	4.利用ACL策略
	　　　　　setfacl -m  u:lisi:r  /etc/shadow


###############################################
################################################################
(重要)  软件包的安装 分区规划及使用 ntp时间同步 

软件包的安装
   零散软件包管理
	1.首先要具备软件的安装包
	2.构建web服务或ftp服务共享光盘所有内容(之后会学习到)
	3.讲虚拟机classroom已经构建完成web服务且已经共享光盘内容
	4.访问测试 
	访问http://classroom.example.com/
        包的版本在Linux是有严格的限制的 版本不同肯能 使用不了,会出现不兼容,漏洞等
	安装符合版本的包
	5.下载软件包
	使用wget下载工具
	-wget 软甲包url地址  #默认下载到当前位置
	-wget 软甲包url地址 -O /目录
	提供Ftp功能的软件包(vsftpd)
		vim /etc/vsftpd/vsftpd.conf
		允许匿名登录
		anon_upload_enable=YES


	6.安装
	  适用于单个安装(若依赖关系过多的话请使用yum)
		rpm -qa 软件名 查询该软件是否已经安装
		rpm -qf /usr/bin/mail  //查询文件所属软件 和 yum provides 作用相同
		rpm -ivh 软件名-版本信息.rpm..   ###安装 只有在安装的时候才需要完整的路径和包名
		rpm -e --nodeps 软件名          ###卸载软件,忽略依赖关系
		rpm -qc 软件名                  ###查找软件生成的配置文件位置
		rpm -ql 软件名                  ###查看安装软件安装位置
		yum provides /etc/hosts        ###查询某个文件所属的软件
		rpm -qf                        ###查询/验证文件属于的软件包
        rpm --import name              ###解决签名

	#######################################	
	升级Linux内核(rpm包) 虚拟机中操作
		显示内核版本 : uname -r
		[zhangsan@server0 root]$ uname -r
		3.10.0-123.el7.x86_64

		1.下载新的内核软件包 wget http://classroom.example.com/content/rhel7.0/x86_64/errata/Packages/kernel-3.10.0-123.1.2.el7.x86_64.rpm
		2.安装新内核包 别按ctrl + c  结束 不然会炸鸡
			[root@server0 ~]# rpm -ivh kernel-3.10.0-123.1.2.el7.x86_64.rpm 
			警告：kernel-3.10.0-123.1.2.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID fd431d51: NOKEY
			准备中...                          ################################# [100%]
			正在升级/安装...
			1:kernel-3.10.0-123.1.2.el7        ################################# [100%] 
		3.软件包的依赖关系
		   错误: 依赖检测失败
		    可以手动安装: 但不推荐
   	yum仓库管理(重要,面试常考,推荐使用)
		 yum(也是服务)配置及其使用(软件包仓库)
		 作用:为客户端自解决依赖关系安装软件包
		 (配置前先明白谁是服务端谁是客户端,下面的例子是以classroom为服务端)
       	         服务端: 虚拟机 classroom  (有众多的软件包,仓库数据文件,构建web/ftp服务)
		                                  光盘中既具备软件包又具备仓库数据文件 
							packages/       repodata/
		
		 总结:构建web服务/ftp服务,共享光盘内容(搭建yum的服务端仓库,安装 httpd 或者 ftp 共享 光盘的中仓库,这里就完成了 )
		 客户端: server 
		 /etc/yum.repos.d/*.repo
                 指定服务位置 修改配置文件,错误的配置文件会音响到正确的配置文件
		
		[root@server0 ~]# rm -rf /etc/yum.repos.d/* #############删除文件夹下所有文件,不是删除文件夹误删除后自己创建相同文件夹 就好
		[root@server0 ~]# vim /etc/yum.repos.d/dvd.repo ########给你的配置文件起个名字 不支持中文
		格式	#### 记忆yum配置文件的关键字 面试常考	
		[nsd1903] #仓库表示
		name=rhel7 # 仓库描述信息
		baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/ #指定服务端
		enabled=1 #是否启用本文件
		gpgcheck=0 #不检测签名

		gpgcheck=1 时 需要指明 gpgkey的存放位置
		gpgkey=file:///opt/ccc  ###注意这里的 格式  /// 最后一个代表根

	      [root@server0 ~]# yum repolist  #显示如下信息时表示yum配置完成
		已加载插件：langpacks
		nsd03                                                    | 4.1 kB     00:00     
		(1/2): nsd03/group_gz                                      | 134 kB   00:00     
		(2/2): nsd03/primary_db                                    | 3.4 MB   00:00     
		源标识                                源名称                               状态
		nsd03                                 rhel7                                4,305
		repolist: 4,305

		[root@server0 ~]# yum -y install httpd
		已加载插件：langpacks
		正在解决依赖关系
		****
		完毕！ #看到完毕时 表示安装完成
				
		yum remove xxx   卸载 #由于依赖关系的存在,可能在卸载某些包的时候会卸载,相当重要的依赖包 (这条命令不要加 -y选项)
	      yum clear all    清空yum缓存
总结:   删除/etc/yum.repos.d/*
	创建 /etc/yum.repos.d/xxx.repo  ##xx表示配置文件的名字
	配置文件格式:
	nsd1903] #仓库表示
		name=rhel7 # 仓库描述信息
		baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/ #指定服务端
		enabled=1 #是否启用本文件
		gpgcheck=0 #不检测签名
###########################################
硬盘分区管理
   	 扇区(硬盘最小的单位)的大小 512字节 
	  硬盘(块设备)###在虚拟机上操作
	思路: 识别硬盘=>分区规划=>格式化=>挂载使用
	      毛坯楼层=>打隔断 => 装修 => 入住
查看硬盘
     lsblk来列出系统中所有的硬盘
	[root@server0 ~]# lsblk
	NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
	vda    252:0    0  10G  0 disk 
	└─vda1 252:1    0  10G  0 part /
	vdb    252:16   0  10G  0 disk 
	vda1表示分区1  vda 虚拟硬盘1  vdb 虚拟硬盘2 
分区规划
	分区模式 :mbr古老 gpt 新的模式
		
	主引导记录分区模式:mbr
	mbr/msdos 分区模式
	1-4个主分区 或者3个主分区+1个扩展分区(n个逻辑分区)
	扩展分区再划分就是逻辑分区
	最大支持2.2tb的磁盘	
	扩展分区不能格式化
	/dev/sda5 :该设备表示含义
		第一块scsi借口设备,第五个分区
		第一块scsi借口设备,第一个逻辑分区

		使用命令fdisk /dev/vba 创建分区(只支持mbr分区)
		 n 创建分区
		 p 选择主分区\扩展分区
		 起始扇区
		 结束扇区
		 w 保存退出
		q退出不保存
格式化: 赋予空间文件系统
	文件系统:数据在空间的存储规则
	Linux文件系统
	        RHEL6 ext4 小文件优秀
			RHEL7 xfs  大文件优秀

	mkfs.ext4 分区设备路径
	mkfs.ext3 分区设备路径
	mkfs.xfs  分区设备路径
	mkfs.vfat 分区设备路径
      blkid /dev/vdb1 #查看分区文件类型类型
	对于一块磁盘重复格式化时 有时会需要 强制 格式化 
	eg:
	[root@server0 ~]# mkfs.ext4 /dev/vdb1
	mke2fs 1.42.9 (28-Dec-2013)
	文件系统标签=
	****
	[root@server0 ~]# blkid /dev/vdb1
	/dev/vdb1: UUID="b6fe10fe-9151-4544-a3ac-1328e75ae1ce" TYPE="ext4" 
	[root@server0 ~]# mkfs.xfs /dev/vdb2
	[root@server0 ~]# blkid /dev/vdb2
	/dev/vdb2: UUID="c45e5a63-1d4c-40ca-92ce-294d22d68fb5" TYPE="xfs"
挂载设备进行使用
	mkdir /mypart1 #创建挂载点
	mount /dev/vdb1 /mypart1 (临时挂载)
	df -h#查看正在挂载的分区(设备使用情况) -h 显示易读信息#查看分区信息 (比较常考)
	
	[root@server0 ~]# mkdir /mypart1
	[root@server0 ~]# mount /dev/vdb1 /mypart1/
	[root@server0 ~]# df -h
	文件系统        容量  已用  可用 已用% 挂载点
	/dev/vda1        10G  3.4G  6.7G   34% /
	devtmpfs        901M     0  901M    0% /dev
	tmpfs           921M   80K  921M    1% /dev/shm
	tmpfs           921M   17M  904M    2% /run
	tmpfs           921M     0  921M    0% /sys/fs/cgroup
	/dev/vdb1       976M  2.6M  907M    1% /mypart1
永久挂载(开机自动挂载)
	修改配置文件 /etc/fstab 
	配置文件/etc/fstab 的记录格式
        设别路径     挂载点   类型    参数       备份标记        检测顺序
	/dev/vdb1 /mypart1 ext4  defaults    0(1备份)      0(1检测,只有root分区写1 自己的就不要写了)          
	/dev/vdb2 /mypart2 xft   defaults     0           0
	vim 命令模式进入插入模式 可以按 o 另起新的一行
	mount -a 自动挂载
	检测开机自动挂载配置文件格式是否正确
	检测/etc/fstab 中书写完成,但当前没有挂载的设备 进行挂载 
综合分区
	扩展分区 一路回车就好
	若你在扩展分区是设定 大小,那么 在建立逻辑分区时 只有设定的大小可以分配
	若在分区完成后系统没有识别分区 使用partprobe(刷新系分区) 强制系统识别分区
	注意:系统对与扩展分区的容量显示是不正确的,这不是bug


总结:
 1. 识别硬盘 lsblk
 2. 分区划分 fdisk 
 3. 刷新分区表 partprobe
 4.进行格式化 mkfs.ext4 mkfs.xft  blkid #查询分区信息
 5. mount -a 测试挂载  df -h 显示挂载点
 6. 永久挂载 修改配置文件/etc/fstab 

DN域名DC域控制器
showmount -e 服务端主机/IP

补充:   LDAP (红帽认证考试考点)服务器 (面试大可能会问到)
	使用LDAP认证,实现网络用户认证,达到用户的集中管理(记住这句话) 
	网络用户:用户信息会放在网络中的LDAP服务器
	本地用户:用户信息会放在/etc/passwd
	客户端:classroom
	1. 安装sssd软件,与ldap服务器 通信       
	 yum install -y sssd ####真正起作用的是 SSSD ,由他来提供服务
	   rpm -q sssd
        2.安装authuconfig-gtk图形工具
	yum install -y authuconfig-gtk  ###只提供图像化界面
本地识别的用户不全是在/etc/oasswd ,也有可能在 ldap中
之后配合 autofs实现家目录漫游
#############################


#####################################################
触发挂载
1.关闭虚拟机server,添加光驱设备,将光盘放入

2.安装autofs可以实现触发挂载软件
[root@server0 ~]# yum -y install autofs
3.重启autofs服务
[root@server0 ~]# systemctl restart autofs
[root@server0 ~]# systemctl enable autofs
4.进行触发挂载
[root@server0 ~]# ls /misc
[root@server0 ~]# ls /misc/cd

#################################################
]# ls /etc/auto.master  #触发挂载的主配置文件
]# ls /etc/auto.misc    #挂载配置文件

 触发挂载必须为二层目录结构

  /nsd/第一层称之为监控点,必须有管理员亲自创建

监控点由/etc/auto.master设置
[root@server0 /]# vim /etc/auto.master  
 /misc   /etc/auto.misc
 /nsd    /etc/test

 监控点      指定挂在配置文件的路径
翻译:
设置监控点为/misc,要想知道挂载什么设备,请看/etc/auto.misc文件

[root@server0 /]# fdisk /dev/vdb
[root@server0 /]# mkfs.xfs /dev/vdb1
[root@server0 /]# vim /etc/test 
abc      -fstype=xfs,rw      :/dev/vdb1
挂载点      文件系统类型及参数           挂载设备

[root@server0 /]# systemctl restart autofs
[root@server0 /]# cd /nsd/abc

###############################################

############################
lvm逻辑卷  (最小的单位是分区:整个分区 不可以是某个分区的剩余硬盘)
  作用:整合分散空间 大小可以动态扩大
  将众多的物理卷(也可以是一个)组建成卷组,再从卷组中划分逻辑卷
思路:  零散空闲存储----整合的虚拟磁盘-----虚拟分区
       物理卷(pv)  =>   卷组(vg)  =>  逻辑卷(lv) 
         

	准备阶段
		一 添加硬盘
		1.关机 添加硬盘
		2.远程管理 server
		ssh -X root@172.25.0.11
		lsblk
		二 分区划分
		fdisk 
	准备完成
需要使用的命令
功能  	  物理卷管理    卷组管理  逻辑卷管理
SCAN 	  pvscan     vgscan  lvmscna
  	    pvs        vgs
      显示当前物理卷信息  




[root@mysql_11_master ~]# yum -y install lvm2


lvm卷组制作
	思路: vgcreate 
	      lvcreate
		格式化 
		挂载
1.创建名为systemvg的卷组
格式: vgcrrate 卷组名 设别路径
[root@server0 ~]# vgcreate systemvg /dev/vdc[1-2]

pvs #查看物理卷
vgs #查看卷组
[root@server0 ~]# vgs
  VG       #PV #LV #SN Attr   VSize  VFree 
  systemvg   2   0   0 wz--n- 19.99g 19.99g
[root@server0 ~]# pvs
  PV         VG       Fmt  Attr PSize  PFree 
  /dev/vdc1  systemvg lvm2 a--  10.00g 10.00g
  /dev/vdc2  systemvg lvm2 a--  10.00g 10.00g
 2.创建逻辑卷
格式: lvcreate -n vo -L 16G systemvg
                  逻辑卷名   大小  卷组名
 
eg:
[root@server0 ~]# lvcreate -n vo -L 16G systemvg
  Logical volume "vo" created
[root@server0 ~]# lvs #查看系统中所有逻辑卷
  LV   VG       Attr       LSize  Pool Origin Data%  Move Log Cpy%Sync Convert
  vo   systemvg -wi-a----- 16.00g                                             
[root@server0 ~]# pvs #查看物理卷
  PV         VG       Fmt  Attr PSize  PFree
  /dev/vdc1  systemvg lvm2 a--  10.00g    0 
  /dev/vdc2  systemvg lvm2 a--  10.00g 3.99g

[root@server0 ~]# vgs #查看系统所有卷组信息
  VG       #PV #LV #SN Attr   VSize  VFree
  systemvg   2   1   0 wz--n- 19.99g 3.99g


逻辑卷设备使用
逻辑卷设备文件 /dev/systemvg/vo

                                            卷组名  逻辑卷组名
	[root@server0 ~]# ls /dev/systemvg/vo 
	/dev/systemvg/vo  ##快捷方式 指向  dev/systemvg/vo -> ../dm-0
1.格式化
	[root@server0 ~]# mkfs.xfs /dev/systemvg/vo 
	[root@server0 ~]# blkid /dev/systemvg/vo
	/dev/systemvg/vo: UUID="b64ca55d-311f-4413-8bf1-3c565168117b" TYPE="xfs"
2.挂载
	[root@server0 ~]# mkdir /mypart1
	[root@server0 ~]# vim /etc/fstab 
	/dev/systemvg/vo /mypart1 xfs defaults 0 0
	[root@server0 ~]# mount -a 
	[root@server0 ~]# df -h
逻辑卷的扩展 #支持线上操作 不需要下线后扩展
	一 卷组空间足够
	1.扩展逻辑卷组空间的大小
	 lvextend -L  18G /dev/systemvg/vo	
		      扩大后的容量
	2.扩展逻辑卷组文件系统的大小
	  根据文件系统不同 扩展命令也不同
	 ext4 : resize2fs /dev/systemvg/vo
        xfs:   xfs_growfs /dev/systemvg/vo
	二 卷组空间不足
	让卷组变大
	1.扩展卷组空间                      卷组名    被添加的分区
	[root@server0 ~]# vgextend systemvg /dev/vdc3 #####扩展卷组
	[root@server0 ~]# vgs
	  VG       #PV #LV #SN Attr   VSize  VFree
	  systemvg   3   1   0 wz--n- 29.99g 4.99g
		                             扩展后大小   逻辑卷组url
	[root@server0 ~]# lvextend -L 25G /dev/systemvg/vo###逻辑卷组

	[root@server0 ~]# lvs
	  LV   VG       Attr       LSize  Pool Origin Data%  Move Log Cpy%Sync Convert
	  vo   systemvg -wi-ao---- 25.00g    
	      	扩展文件系统                  被扩展的逻辑卷组url
	[root@server0 ~]# xfs_growfs /dev/systemvg/vo ###扩展文件系统
	[root@server0 ~]# df -h
	/dev/mapper/systemvg-vo   25G   33M   25G    1% /mypart1

##################
卷组分配大小以4m为单位
可以使用
vgcreate -s pe大小 卷组名 空闲分区

lvcreate -l pe个数 -n 逻辑卷名

逻辑卷的删除 
一定要按照这个顺序删除 ,删除前请先卸载
删除卷组前,基于此娟组创建的逻辑卷
lvremove 
vgremove
pvremove

 | 基本不支持 双参数 命令 cp mv
##################
find  查找 递归
  find 路径 条件 也支持多个条件
 -type 类型 (f文本文件,d;目录 ,l快捷方式)
 -name '文档名字'
 -size +|- 文件大小(k(小心),G,M)
  -o  通常接其他命令 表示 or 
  -user 用户名 
  -mtime +10 #表示十天之前 创建 修改 
		#-10 最近十天创建\修改的数据
	      +90 #三个月之内创建或修改的数据
	文件修改时间
	所有的时间都是过去时间
  -exec 处理命令 {}\; #处理find查找的结果
	优势:以{}代替每一个结果逐个处理,遇到\;结束#####注意 结尾
      [root@server0 ~]# find /boot/ -name 'vm*' -exec    cp {} /opt \;
	  [root@server0 ~]# find /boot/ -name 'vm*' -exec    cp {} /opt/ \;
                    -exec 执行 command；如果命令返回状态值0，那么 exec 返回true。所有 find
                          其余的命令行参数将作为提供给命令的参数，直到遇到一个由       `;'
                          组成的参数为止。命令的参数中，字符串                        `{}'
                          将以正在处理的文件名替换。所有的                            `{}'
                          都会被替换，不仅是在单独的一个参数中。有些版本的            find
                          不是这样做的。       这些参数可能需要用       `\'       来escape
                          或者用括号括住，防止它们被shell展开。命令是从起始目录执行的。


	[root@server0 ~]# find /etc/ -name passwd* ####支持通配符

date  #查看当前系统时间
date -s 'year-month-day h:m:s' #注意格式 
自动时间同步
NTP时间服务器
 -ntp服务器为客户机提供标准时间  端口123
  -客户机与ntp服务器保持通讯
ntp服务器 classroom
ntp客户机 server
 1.安装chrony
 2.修改配置文件
vim /etc/chrony.conf 	
server classroom.example.com
 3.重启服务
[root@server0 ~]# systemctl restart chronyd ####### 重启服务
[root@server0 ~]# systemctl enable chronyd #####设置开机自启

####################################################
集群
高可用 高效率
##################################
cron 计划任务(面试常考)
		          周期性任务
	    ___________|_____________            
	    |                  |                       | 
	cron任务描述---管理计划任务策略---如何编写crontab 任务记录

作用:按照设定时间间隔为用户反复执行某一项固定系统任务
  crontab 
  配置格式 /etc/crontab  文件
  /var/spool/cron  文件就是保存计划任务的文件
编辑  crontab -e -u 用户名
查看  crontab -l -u 用户名



删除  crontab -r -u 用户名 
格式  
    分 时 日 月 周  任务命令(绝对路径)
     *  *  *  *  *  #五个*表示分钟都执行一次 
     30 8  *  *  *  #每天早上8点半执行一次
     0   21 *  *  5  #每周周五晚上执行  
     0   21 *  *  1-5 #周一到周五 每天9点
     0   21 *  * 7   #周日 0 也代表周日
    0   21 *  *  1,3,5 #周一周三周五 每天9点
    1    8  1  *   1    #周一或每月一号执行8:01
    */3  *  *  *    *   #每隔三分钟执行一次
	* 匹配范围内任意时间
        ,分割多个不连续的时间点
	- 指定连续时间范围
	/n 指定时间频率 ,没 n


  23 14 * * * /bin/echo hiya
eg: 每分钟把当前时间保存到/opt/time.txt
	[root@server0 ~]# crontab -e -u root
	* * * * * date >> /opt/time.txt
       [root@server0 ~]# cat /opt/time.txt
	Wed Apr 10 17:47:01 CST 2019
	date 选项+%F 
        显示完整日期
	[student@gao ME]$ date +%F
	2019-04-11

	

