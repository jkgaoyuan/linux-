
    监控和服务安全
        DAY01  监控
                准备三台服务器 2.5 2.100 2.200
           监控的目的
                报告系统运行状态
           监控的资源类别
                公开数据(有服务)
                    web ftp ssh 数据库等应用服务
                        tcp或udp
                私有数据(无法通过端口访问的)
                    cpu 内存 磁盘 网络
                    用户 进程等运行信息
           监控软件
                Zabbix 简介
                    高度集成的监控解决方案
                    实现企业级的开源开源分布式监控
                    通过c/s模式采集监控数据
                    通过b/s模式实现web管理

                监控拓扑
                    监控主机
                        监控服务器通过snmp或者agent采集数据
                        数据可以写入mysql oracle等数据库
                        服务器使用lnmp下实现web的前端管理
                    被监控主机
                        安装agent
                        常见的网络设备支持snmp协议


                安装
                    监控主机

                        安装lnmp

                            vim +65 /usr/local/nginx/conf/nginx.conf 动静分类启动fpm后
                                额外添加如下需要写在http下任意地方 不可以写到其他 地方比如location中
                                fastcgi_buffers 8 16k;                      //缓存php生成的页面内容，8个16k
                                fastcgi_buffer_size 32k;                      //缓存php生产的头部信息
                                fastcgi_connect_timeout 300;                 //连接PHP的超时时间
                                fastcgi_send_timeout 300;                     //发送请求的超时时间
                                fastcgi_read_timeout 300;                        //读取请求的超时时间
                            systemctl restart php-fpm
                            systemctl restart mariadb
                            /usr/local/nginx/sbin/nginx
                            vim /usr/local/nginx/html/info.php  //测试网页
                                <?php
                                phpinfo();
                                ?>
                        安装 zabbix
                            [root@zabbixserver lnmp_soft]# yum -y install  net-snmp-devel \
                            > curl-devel
                            //安装相关依赖包
                            [root@zabbixserver lnmp_soft]# yum -y install  \
                            > libevent-devel-2.0.21-4.el7.x86_64.rpm
                            //注意libevent-devel这个软件包在lnmp_soft目录下有提供
                            [root@zabbixserver lnmp_soft]# tar -xf zabbix-3.4.4.tar.gz
                            [root@zabbixserver lnmp_soft]# cd zabbix-3.4.4/
                            [root@zabbixserver zabbix-3.4.4]# ./configure  --enable-server \
                            > --enable-proxy --enable-agent --with-mysql=/usr/bin/mysql_config \
                            > --with-net-snmp --with-libcurl
                            // --enable-server安装部署zabbix服务器端软件
                            // --enable-agent安装部署zabbix被监控端软件
                            // --enable-proxy安装部署zabbix代理相关软件
                            // --with-mysql配置mysql_config路径
                            // --with-net-snmp允许zabbix通过snmp协议监控其他设备
                            // --with-libcurl安装相关curl库文件，这样zabbix就可以通过curl连接http等服务，测试被监控主机服务的状态
                            [root@zabbixserver zabbix-3.4.4]# make && make install



                        配置文件默认在 /usr/local/etc/
                        启动命令      /usr/local/sbin/
                        程序         /usr/local/bin/

                        初始化
                            真机
                                Firefox http://192.168.2.5/setup.php

                            2.5
                                安装必须的依赖包

                                yum -y install php-bcmath.x86_64 php-mbstring.x86_64
                                yum -y install php-gd php-xml

                                修改vim /etc/php.ini
                                    date.timezone = Asia/Shanghai
                                    post_max_size = 16M
                                    max_execution_time = 300
                                    max_input_time = 300
                                systemctl restart php-fpm.service

                                Firefox http://192.168.2.5/setup.php
                                    数据库类型选择对应的
                                    数据库用户 zabbix
                                    数据库密码 zabbix
                                    数据库服务器 localhost

                                    192.168.2.5
                                    登录用户 admin
                                    登录用户密码 zabbix

                                修改配置文件 zabbix 启动服务
                                    监控主机

                                    vim /usr/local/etc/zabbix_server.conf

                                    38 LogFile=/tmp/zabbix_server.log
                                    85 DBHost=localhost
                                    95 DBName=zabbix
                                    111 DBUser=zabbix
                                    119 DBPassword=zabbix

                                    由于源码安装未指定用户

                                    useradd zabbix
                                    zabbix_server
                                    ss -antulp | grep 10051

                                安装zabbix

                                    被监控主机

                                          217  useradd -s /sbin/nologin zabbix
                                          218  yum -y install gcc pcre-devel

                                          220  yum -y install gcc pcre-devel
                                          221  ls
                                          222  tar -xf  zabbix-3.4.4.tar.gz
                                          223  cd zabbix-3.4.4/
                                          226  ./configure --enable-agent
                                          227  make && make install

                                          vim /usr/local/etc/zabbix_agentd.conf
                                              134 ServerActive=192.168.2.5:10051
                                              93  Server=127.0.0.1,192.168.2.5
                                              30  LogFile=/tmp/zabbix_agentd.log
                                          zabbix_agentd //启动agent服务
                                          ss -antulp |grep 10050

                自定义监控
                    配置客户端

                        启动自定义监控
                            vim /usr/local/etc/zabbix_agentd.conf
                                264 Include=/usr/local/etc/zabbix_agentd.conf.d/
                                 280 UnsafeUserParameters=1

                        定义监控命令
                             vim /usr/local/etc/zabbix_agentd.conf.d/user.number
                                UserParameter=user.number,wc -l /etc/passwd | awk ' {print $1} '
                        重启服务
                             killall -9 zabbix_agentd
                             zabbix_agentd
                        本机测试
                            zabbix_get -s 127.0.0.1 -p 10050 -k user.number

                    配置监控服务器
                        测试客户端定义监控
                            zabbix_get -s 192.168.2.100 -p 10050 -k user.number



           Zabbix报警机制
                触发器

                    触发器表达式

                        常用的表达式
                            sum(600) 600s内所有值的总和
                            sum(#)最后5个值的总和
                        {web1:system.cpu.load[all,avg1].last(0)}>5
                        web1主机最新的cpu平均负载大于5,触发器状态为问题状态
                    配置邮件服务器(在监控主机本机运行邮件服务器)
                        # yum -y  install postfix
                        ]# rpm -q postfix
                        ]# systemctl  start postfix
                        ]# netstat -utnlp  | grep  :25

                        //////////确认可以使用hostname访问本机///////////////

                        ]# vim /etc/hosts
                        127.0.0.1       zabbix-server  localhost localhost.localdomain localhost4 localhost4.localdomain4
                        :wq


                        ]# yum -y  install mailx
                        [root@zabbix-server ~]# which  mailx
                        /usr/bin/mailx
                        [root@zabbix-server ~]# mail -s "xxx"  zabbix  < /etc/yum.repos.d/local.repo
                        [root@zabbix-server ~]#
                        [root@zabbix-server ~]# su - zabbix
                        [zabbix@zabbix-server ~]$
                        [zabbix@zabbix-server ~]$ mail
                        Heirloom Mail version 12.5 7/5/10.  Type ? for help.
                        "/var/spool/mail/zabbix": 1 message 1 new
                        >N  1 root                  Fri Jun 28 09:48  22/734   "xxx"
                        & exit
                        [zabbix@zabbix-server ~]$ exit
                        logout

                    指定邮件服务器
                        创建Media （指定收件人）
                        创建Action   名aone
                        验证配置： 监控到主机100的用户数量大于28个时,zabbix@localhost邮箱是否收到邮件。



           Zabbix进阶操作

                自动发现
                    创建自动发现

                    创建动作

                主被动监控
                   主动监控

                   被动监控(默认)

                   配置主动监控
                        配置客户端  192.168.2.201

                            安装zabbix
                                useradd zabbix
                            修改配置文件
                                vim /usr/local/etc/zabbix_agentd.conf
                                93 #Server=127.0.0.1  //
                                118 StartAgents=0   //主动链接服务器,不需要端口
                                134 ServerActive=192.168.2.5  //监控主机
                                145 Hostname=Zabbix client web2 //主动监控模式,依靠hostname区分主机
                                183 RefreshActiveChecks=120     //自动刷新时间
                            启动服务
                                zabbix_agentd
                                ps  aux | grep agentd   //只有服务没有端口
                                ss -antulp | grep 10050

                        配置监控主机
                            登录2.5管理
                            克隆模板
                              全克隆
                            修改监控项模式


                监控案例

                    监控nginx

                        2.100安装lnmp
                            在客户端创建监控命令 nginx.status[*]

                        配置监控服务器

                            登陆监控服务的管理页面做如下配置:
                            1 创建监控模板 	Atmp2
                            2 创建应用集      mon-nginx
                            3 创建监控项 并关联到对应的监控命令
                            now_link_num  	  nginx.status[Active]
                            now_link_req	  nginx.status[accepts]
                            now_waiting_num   nginx.status[Waiting]

                            4 添加监控主机 并调用监控模板
                            5 查看监控数据
                总结:

                搭建zabbix监控服务器 : 部署lnmp 安装源码 zabbix 初始化配置 启动服务
                监控配置: 基本监控 自定义监控 邮件报警(报警媒介 触发器 动作)
                         自动发现 主被动监控
           DAY03


                linux基本防护
                  用户账户安全
                        账户安全
                             chage  更改用户密码过期信息
                                 chage –E 时间 账户名称
                                 chage –l    账户名称
                                 chage -l root //显示root的密码信息

                                 chage -l jim  //  /etc/shadow 是保存密码相关信息的文件
                                 chage -d 0 jim // -d 指定密码过期时间
                                 //强制用户使用初始密码登录必须修改密码
                                    最近一次密码修改时间					：密码必须更改
                                    密码过期时间					：密码必须更改
                                    密码失效时间					：密码必须更改


                        账户的锁定
                             passwd
                                -l 锁定账户  锁定账户后用户无法登录(对root无效)
                                -u 解锁账户
                                -S 查看状态

                        强制定期修改密码
                             /etc/login.defs  //账户密码的默认有效期
                             PASS_MAX_DAYS    99999                        //密码最长有效期
                             PASS_MIN_DAYS    0                            //密码最短有效期
                             PASS_MIN_LEN    5                            //密码最短长度
                             PASS_WARN_AGE    7                            //密码过期前几天提示警告信息
                             UID_MIN                  1000                //UID最小值
                             UID_MAX                  60000                //UID最大值

                        伪装登录提示
                             /etc/issue   //本地登录信息  默认包括系统版本 内核版本
                                为了安全,伪装登录,使之不显示 正常的系统版本和内核版本

                             /etc/issue.net  //远程登录信息
                                里面向写啥写啥 //只是伪装登录信息,登录依然可以查看正确的系统版本信息
                  文件系统安全
                        程序和服务控制
                            systemctl (7)

                            checkconfig( redhat 6 5 )   服务名  on /off  开机自启/关闭开机自启


                        锁定/解锁保护文件

                            EXT3/EXT4 文件属性控制

                                命令
                                    chattr 添加/删除
                                    lsattr 查看
                                方法
                                    + - =
                                属性 i 不可变 //可以复制

                                    a 仅可追加 //可以复制

                                当你发现 作为管理员用户 无法对某个文件操作时,
                                记得查看文件的属性
                                比如  useradd dc
                                     提示 权限不够 请检查 /etc/passwd
                                入职时检查  别名的设置 看看有没有坑

                用户切换提权
                    切换与提权的应用场景

                        切换用户
                            su
                            不是所有维护人员使用 root账户登录
                            su 日志文件 /var/log/secure 查看谁使用过 su

                            su 单独使用时 要求 当前管理员 密码 只将用户切换过来,环境没变
                            su -  用户和环境都变化
                             -c 使用命令

                            su - -c "command" user
                            EG:
                            su  -c "/usr/local/nginx/sbin/nginx " root

                        提权
                            sudo

                            配置文件
                                visudo
                                vim /etc/sudoers

                            提权格式
                                修改配置文件
                                用户 主机列表=命令列表
                                %名字 //用户组

                                root    ALL=(ALL)       ALL
                                用户     主机=命令
                                %wheel  ALL=(ALL)       ALL
                                wheel用户组 可以在任何地点使用任何命令以ROOT权限

                            普通用户查看提权命令
                                sudo -l
                                查看用户可以使用的提权命令




                            普通用户执行提权命令
                                vim /etc/sudoers

                                    添加如下,使得可以 sudo时不需要输入密码
                                    mike   localhost,dba=/sbin/* , !/sbin/ifconfig eth0 , NOPASSWD:ALL

                                启用sudo日志
                                    vim /etc/sudoers
                                    添加如下,之后sudo命令将会被记录
                                        Defaults logfile="/var/log/sudo"
                                    cat /var/log/sudo
                                        Jun 29 14:57:35 : mike : command not allowed ; TTY=pts/1 ; PWD=/home/mike ;
                                        USER=root ; COMMAND=/sbin/ifconfig eth0
                        sudo别名设置
                                /etc/sudoers
                            提高利用率 易读性

                                用户 User_Alias OPERATORS=jerry,tom,alice
                                主机 Host_Alias MAILSERVERS=localhost,dba
                                命令 Cmnd_Alias SOFTMGR=/usr/bin/rpm , /usr/bin/yum , /usr/bin/vim , /etc/my.cnf , /usr/bin/systemctl * mysqld

                                调用
                                    OPERATORS MAILSERVERS=SOFTMGR , NOPASSWD:ALL



                ssh访问控制
                    修改ssh默认访问端口
                        vim /etc/ssh/sshd_config
                            17  Port 3389     //登录端口
                            37  LoginGraceTime 2m //登录限时
                            40  MaxAuthTries 3  //最多认证次数
                            115 UseDNS no       //不解析客户机地址
                        systemctl restart sshd

                        使用新终端链接
                             ssh root@192.168.4.50 -p 3389
                    ssh黑白名单

                        修改配置文件

                        vim /etc/ssh/sshd_config

                            DenyUsers user1 user2
                            AllowUsers user1@host user2@localhost
                            DenyGroups  group1 group2
                            AllowGroups group1 group2

                        eg:
                        vim /etc/ssh/sshd_config
                            AllowUsers root@192.168.4.50 alice
                            允许4.50以root登录本机,且 alice用户不受限制登录
                    口令验证

                        PasswordAuthentication yes  //密码验证  默认开启
                    启动密钥对登录
                        PubkeyAuthentication yes    //秘钥检查
                部署ssh公钥
                    生成公钥
                        指定加密算法 -t rsa -t dsa
                    ssh-keygen
                    ssh-keygen -f /root/.ssh/id_rsa -N ''  -f 指定秘钥位置  -N 提供新密码 '' 表示无密码.为空

                    ssh-copy-id ip
                selinux安全

                    sestatus  //查看selinux 状态
                        SELinux status:                 enabled
                        SELinuxfs mount:                /sys/fs/selinux
                        SELinux root directory:         /etc/selinux
                        Loaded policy name:             targeted  //保护常用的服务; mls 全方位保护;
                        Current mode:                   enforcing
                        Mode from config file:          error (Success)
                        Policy MLS status:              enabled
                        Policy deny_unknown status:     allowed
                        Max kernel policy version:      31

                    getenforce
                    setenforce 1/0  //零时开启或者关闭 selinux 强制模式



                策略设置

                    安全上下文
                        属性构成
                            用户:角色:访问类型:选项
                            system_u:object_r:bin_t:s0       /bin/ls

                        查看
                            文件
                                ls -lZ  文件名
                            目录
                                ls -ldZ 目录名
                            进程
                                ps aux -Z
                                ps aux -Z | grep -i 服务名
                        修改安全上下文
                            chcon
                                -t 指定访问类型
                                -R 递归修改
                                                      admin_home_t  为安全上下文的 文件规则
                              -rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a3.html
                              html]# chcon -t httpd_sys_content_t a3.html

                        一般操作规则
                            创建的文件,一般是继承父级目录的安全上下文
                            移动的文件,原有的上下文属性不变
                            复制的文件,自动继承目标位置的上下文

                        恢复安全上下文

                            restorecon
                             -R 递归修改


                             html]# ls -Z
                            -rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a1.html
                            -rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.html
                             html]# restorecon a.html a1.html
                             html]# ls -Z
                            -rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 a1.html
                            -rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 a.html
                             html]#

                        重置安全上下文

                             /.autorelable  文件
                             下次重启 安全上下文自动重置
                        调整SElinux 布尔值
                            查看
                                getsebool
                                -a 列出所有的布尔值
                            使用
                                setsebool
                                -P 永久修改 重启有效

                                eg:    54  getsebool |grep ftp
                                            ftpd_anon_write --> off
                                            ftpd_full_access --> off
                                       55  getsebool -a |grep ftp
                                       56  setsebool -P ftpd_anon_write on
                                       57  setsebool -P ftpd_full_access on
                                       58  getsebool -a |grep ftp
                                            ftpd_anon_write --> on
                                            ftpd_full_access --> on

                                在启selinux的系统上修改默认端口
                                     这里以 httpd为例子

                                     systemctl restart httpd.service

                                     在message中有semanage信息需要下面三个软件
                                     rpm -qa | grep setroubleshoot
                                        setroubleshoot-plugins-3.0.66-2.1.el7.noarch
                                        setroubleshoot-server-3.2.29-3.el7.x86_64
                                        setroubleshoot-3.2.29-3.el7.x86_64

                                查看semanage的日志
                                    注意最后面的 sealert -l xxxxxx 这是日志文件
                                       查看日志文件
                                    grep setroubleshoot /var/log/messages | tail -1

                                        Jul  2 09:18:14 localhost setroubleshoot: SELinux is preventing httpd from getattr
                                        access on the file /var/www/html/a3.html.
                                        For complete SELinux messages run: sealert -l 54c353ed-077e-4511-88df-1f0cfd39a4d7

                                    sealert -l 54c353ed-077e-4511-88df-1f0cfd39a4d7
                                        找到 do 如下添加端口命令

                                添加 semanage 管理的端口
                                    semanage -l //查看所有的semange端口
                                    semanage port -a -t http_port_t -p tcp 8089


                            fpt 上传

                                ftp 192.168.4.80
                                    [root@room9pc01 ~]# ftp 192.168.4.80
                                    Connected to 192.168.4.80 (192.168.4.80).
                                    220 (vsFTPd 3.0.2)
                                    Name (192.168.4.80:root): ftp
                                    331 Please specify the password.
                                    Password:
                                    230 Login successful.
                                    Remote system type is UNIX.
                                    Using binary mode to transfer files.

                                    ////////进入fpt共享目录///////

                                    ftp> cd share
                                    250 Directory successfully changed.
                                    ////////目标文件目录/////////

                                    ftp> lcd /var/log/
                                    Local directory now /var/log
                                    ftp> put vmware-vmusr.log
                                    local: vmware-vmusr.log remote: vmware-vmusr.log
                                    227 Entering Passive Mode (192,168,4,80,244,48).
                                    150 Ok to send data.
                                    226 Transfer complete.
                                    47892 bytes sent in 0.0562 secs (852.76 Kbytes/sec)




           DAY04

                加密与解密
                    加密的方式
                        对称加密
                            加密解密使用同一个密钥
                        非对称加密
                            加密解密使用不同密钥
                                公钥 加密
                                私钥 解密

                        保护数据完整性
                            只要数据不发生改变 这个值就不会变化
                                MD5
                                SHA

                        常见的加密算法
                            对称  DES/AES
                            非对称 RSA/DSA

                        GPG 加密解密
                            GnuPG  介绍
                                最流行的数据加密,数字签名工具,支持对称加密和非对称加密

                            安装
                                 ~]$ yum -y install gnupg2
                            检查
                                 ~]$ gpg --version

                            生成秘钥
                                 ~]$ gpg --gen-key
                                  设置用户信息 加密类型
                                  查看已有秘钥
                                     ~]# gpg --list-keys
                                  默认位置
                                      gpg: /home/b/.gnupg/trustdb.gpg：建立了信任度数据库
                                      pubring.gpg 公钥文件  secring.gpg 私钥文件  trustdb.gpg 信任文件

                            传递秘钥
                                将生成的秘钥导出
                                    --export 导入 -a   userb 生成秘钥时填的用户
                                    ~]#  gpg --export -a userb > /tmp/userb.pub
                                导入秘钥
                                    将生成的秘钥传递给需要的机器并导入
                                    ~]# gpg --import /tmp/userb.pub

                            加密
                                 --encrypt    加密操作
                                 --decrypt    解密操作
                                 --recipient  指定用户
                                ~]$ gpg -e -r userb a.txt

                            解密
                                ~]$ gpg -d a.txt.gpg > a.txt
                                    输入 userb.pub 的密码

                        GPG签名
                            软件官方以私钥对文件签名,
                            用户下载软件包 软件官方的公钥
                            以公钥验证软件签名 确保数据来源正确

                            签名
                                分离式签名  --detach-sign / -b
                                   ~]$ gpg -b b.txt
                                验证       --verify
                                   ~]$ gpg --verify /tmp/b.txt.sig


                AIDE入侵检测
                    AIDE 入侵检测软件 配置yum即可安装aide
                        安装
                            ~]$ gpg --verify /tmp/b.txt.sig
                        默认配置文件位置
                            /etc/aide.conf
                        修改配置文件
                            ~]# vim /etc/aide.conf
                                注释 99一下
                                添加/root/ FIPSR   //FIPSR为配置文件检测项目,/root/ 为检测目录
                        初始化配置
                            ~]# aide --init
                            生成检测文件
                        日志文件
                             /var/lib/aide/aide.db.new.gz       由aide生成的检测文件,需要保存好

                             /var/lib/aide/aide.db.gz      aide 对比入侵检测时需要查看的文件,配置文件中定义,该文件是第一次初始化时生成的文件
                        检测
                            ~]# aide --check

                        配合审计功能,就可以谁操作过,成功了没有


                扫描与抓包

                    获取一些公开/非公开信息为目标
                        检测潜在风险
                        查找可攻击目标
                        收集设备/主机/系统/软件
                        发现漏洞


                        有许多开源的扫描软件

                            Scan  主动探测
                            Sniff 被动检测
                            Capture  数据包捕获

                        常见的安全分析工具

                            扫描器
                                NMAP
                                    多端口
                                    ping 扫描
                                    tcp/ip指纹校验
                                    等
                                命令
                                    nmap [扫描类型] [选项] <扫描目标>
                                        默认扫描tcp 连接
                                常用扫描类型
                                    -sS, tcp SYN 半开扫描
                                    -sT  tcp 连接扫描 全开扫描
                                    -sU  UDP 扫描
                                    -sP  ICMP 扫描
                                    -A   目标系统全面分析  复合指令 = -O -sV -sC traceroute跟踪
                                选项
                                    -n 不解析域名,使用ip
                                    -p [端口]
                                    eg: nmap -p 20-110 ip
                                        nmap -p 3306,80 ip
                                安装

                                    yum -y install nmap

                                扫描
                                    nmap -sS 176.233.*  //半开扫描
                                    nmap -p 3306,80 192.168.4.55  //指定端口扫描
                        抓包工具
                                协议分析
                                常见的软件
                                tcpdump WIREShark

                                tcpdump
                                    命令行抓包工具
                                    基本用法
                                        tcpdump [选项] [过滤条件]
                                    常见监控选项
                                        -i 指定监控端口(网卡端口)
                                        -A 转化为ACSII码,以方便阅读
                                        -W 将数据包信息保存到指定文件
                                        -r 从指定文件读取数据包信息
                                        -c 定义抓包个数


                                    过滤条件
                                        -类型 host net port portrange
                                        -方向 src dst
                                        -协议 tcp udp ip wlan arp icmp
                                        -多个条件组合 and or not


                                    eg: tcpdump -c 100 -i private1
                                         ~]$ sudo tcpdump -c 1 -i private1 -w one.cap -A
                                         ~]$ tcpdump -A -r one.cap  //查看



                                        tcpdump -i eth0 tcp port 110 -c 10

                                    搭建并抓包
                                          55
                                        安装ftp
                                               yum -y install vsftpd

                                               systemctl restart vsftpd
                                               ss -antulp | grep 21
                                               useradd test  //设置ftp登录用户
                                               echo 12346 |passwd --stdin test //登录密码

                                               cp mysql-community-client-5.7.17-1.el7.x86_64.rpm /home/test/
                                               chmod +r /home/test/mysql-community-client-5.7.17-1.el7.x86_64.rpm
                                        抓包
                                        ~]# tcpdump -i eth0 -A tcp port 21 -w ftp.cpa

                                        查看
                                            当ftp登录成功后可以有文件查看

                                        ~]# tcpdump -A -r ftp.cpa | egrep -i '(user|pass)'

                                            reading from file ftp.cpa, link-type EN10MB (Ethernet)
                                            //////注意这行 结束明文用户///////////////////////
                                            17:11:31.517723 IP 192.168.4.254.44550 > redisE-55.ftp: Flags [P.], seq 1:12, ack 21, win 229, options [nop,nop,TS val 32432672 ecr 28072882], length 11: FTP: USER test
                                            ... ..[.USER test
                                            17:11:31.517835 IP redisE-55.ftp > 192.168.4.254.44550: Flags [P.], seq 21:55, ack 12, win 227, options [nop,nop,TS val 28076695 ecr 32432672], length 34: FTP: 331 Please specify the password.
                                            ..j.... 331 Please specify the password.
                                            //////注意这行 结束位置明文密码////////////////////
                                            17:11:33.373714 IP 192.168.4.254.44550 > redisE-55.ftp: Flags [P.], seq 12:25, ack 55, win 229, options [nop,nop,TS val 32434528 ecr 28076695], length 13: FTP: PASS 123456
                                            ...`..j.PASS 123456
                                            17:11:36.529689 IP redisE-55.ftp > 192.168.4.254.44550: Flags [P.], seq 77:115, ack 31, win 227, options [nop,nop,TS val 28081707 ecr 32437684], length 38: FTP: 530 Please login with USER and PASS.
                                            ..~+....530 Please login with USER and PASS.



                                        真机 4.254
                                            访问ftp
                                                安装命令行工具
                                                    yum -y install ftp
                                                登录ftp
                                                    ftp 192.168.4.55
                                                    Connected to 192.168.4.55 (192.168.4.55).
                                                    220 (vsFTPd 3.0.2)
                                                    Name (192.168.4.55:student): test
                                                    331 Please specify the password.
                                                    Password:
                                                    530 Login incorrect.
                                                    Login failed.
                                                    ftp>
                                wireshark

                                    需要图形支持

                                    安装软件
                                        yum -y install wireshark wireshark-gnome.x86_64

                                    启动
                                        wireshark

                                        绿色的 选择 网卡 三角(表示监听)


           DAY05

                系统审计
                    什么是审计
                        基于事先配置的规则生成日志,记录可能发生在系统上的事件
                        审计不会为系统提供额外的安全保护,但会发现并记录违法安全策略的人及其对应的行为
                        审计能够记录的日志内容
                            日期,事件 ,结果
                            触发事件的用户
                            所有认证机制的使用都可以被记录 eg:ssh
                            对关键数据文件修改行为


                    部署audit

                        审计系统需要安装audit软件包
                        开启后无法关闭
                        主配置文件
                            /etc/audit/audit.conf
                        日志文件
                            /var/log/audit/audit.log
                        规则文件
                            /etc/audit/audit.rules
                        ausearch 工具  根据条件过滤日志
                        aureport 工具  将记录的信息生成报表

                        安装
                           yum -y install audit
                           systemctl start auditd
                           systemctl enable auditd

                        auditctl常用
                        选项

                            auditctl -l  //查询规则
                            auditctl -s  //查看状态
                            auditctl -D  //删除所有规则

                        定义临时规则
                            auditctl -w  path permission -k key_name
                                 -path 需要审计的文件/目录
                                 权限可以是 rwxa 文件/目录 属性变化
                                 key_name 可选项 方便识别那些规则生成特点日志项目

                                设置规则对所有passwd文件的写和属性修改操作 都会记录于日志文件
                                eg:  auditctl -w /etc/passwd -p wa -k passwd_change ///监控passwd文件,的写/属性修改
                                     auditctl -w /etc/selinux/ -p wa -k selinux_change /// 监控/etc/selinux目录
                        定义永久规则
                            写入配置文件/etc/audit/rules.d/audit.rules

                            vim /etc/audit/rules.d/audit.rules

                                -w /etc/passwd -p wa -k passwd_change







                        搜索日志
                            命令
                                ausearch option -if file_name
                                -i 交互式
                                -if file_name //指定文件名

                            eg: ausearch -k disk_partition
                                arch=c000003e syscall=59 success=yes exit=0 a0=19b5b50 a1=18edd60 a2=198cd50 a3=7ffcc5ec7520
                                items=2 ppid=6429 pid=6479 auid=0 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0
                                tty=pts2 ses=26 comm="fdisk" exe="/usr/sbin/fdisk"
                                subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 key="disk_partition"

                             我们主要观察 uid gid comm exe  key  a1-a4(命令参数)这几项

                服务安全

                    安装源码
                        nginx 并运行服务
                        这里不在说明,参考project1
                    nginx 优化

                        关闭默认安装时 加入的 两个模块 提高安全性

                            /usr/local/nginx/sbin/nginx -s stop
                            [root@localhost nginx-1.12.2]# ./configure \
                            > --without-http_autoindex_module \   // 会将网站更目录下的全部文件暴露给公网
                            > --without-http_ssi_module
                            make && make install
                            /usr/local/nginx/sbin/nginx

                        修改nginx版本信息

                            修改源码包中的版本信息 (在头部文件)
                                http]# cd /root/nginx-1.12.2/src/http
                                http]# vim +48 ngx_http_header_filter_module.c
                                     修改server后的部分
                                        static u_char ngx_http_server_string[] = "Server: tomcat" CRLF;
                                        static u_char ngx_http_server_full_string[] = "Server:tomcat "  CRLF;
                                        static u_char ngx_http_server_build_string[] = "Server:tomcat "  CRLF;

                            重新安装删除不需要的部分
                                 /usr/local/nginx/sbin/nginx -s stop
                                nginx-1.12.2]# ./configure \
                                > --without-http_autoindex_module \   // 会将网站更目录下的全部文件暴露给公网
                                > --without-http_ssi_module
                                make && make install
                                /usr/local/nginx

                            限制并发

                                由于安装使没有取消ngx_http_limit_req_module的安装导致ddos攻击风险增加
                                     --该模块可降低ddos风险
                                     通过修改配置来限制这个模块

                                    vim /usr/local/nginx/conf/nginx.conf

                                      http{

                                               ////$binary_remote_addr 为 nginx内置的函数 ---记录用户ip
                                               ////zone=one 定义名为 one的内存空间 10 Mb  每秒处理一个请求 r --request
                                        limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
                                           server{
                                            ....
                                            limit_req zone=one burst=5;
                                            .....
                                              }
                                      }
                                    /usr/local/nginx/sbin/nginx -s stop
                                    /usr/local/nginx/sbin/nginx


                            拒绝非法请求

                                禁用其他只允许  get/post 请求

                                    vim /usr/local/nginx/conf/nginx.conf
                                        http{
                                        server {
                                            listen       80;                 匹配不到 get/post 时为真
                                            if ($request_method !~ ^(GET|POST)$){  ///正则: ~ 表示: 按位取反// ! 逻辑否

                                                    return 444'

                                            }
                                        .....
                                            }
                                        }


                                    测试
                                            curl -i -X HEAD http://192.168.4.80/
                                            curl -i -X GET http://192.168.4.80/

                        防止buff溢出

                            防止客户端请求数据溢出
                            有效降低机器dos攻击风险

                                    vim /usr/local/nginx/conf/nginx.conf

                                        http{
                                            ...
                                        client_body_buffer_size 1K;
                                        client_header_buffer_size 1K;
                                        client_max_body_size 16K;
                                        large_client-header_buffers 4 4K;
                                              ...
                                               }



                数据库安全
                    mysql 就没有这些 问题
                    mariadb
                        初始化安全脚本
                            配置root密码
                            删除匿名账户
                            禁止远程root登录
                            删除测试库
                            刷新权限
                            ///////////
                            #~ mysql_secure_installation
                            输入密码 ....

                        修改数据库密码
                            ~]# mysqladmin -uroot -pgaoyuan password 'mysql'
                                                    旧密码             新密码
                            或者

                            MariaDB [(none)]> set password for root@"localhost"=password('redhat')

                            mariadb 5.6 版本之前的 binlog日志中 有明文密码

                            并且bashde历史记录中也会记录操作命令

                            ]# cat .bash_history
                               ....
                               mysqladmin -uroot -pxxx password 'redhat'
                               ....
                            ]# cat .mysql_history
                                ...
                                grant all on wordpress to wordpress identified by "wordpress";
                                ...
                            需要定时删除历史记录

                        数据安全
                            创建可以远程登录的账户
                                ~]# mysql -uroot -p
                                MariaDB [(none)]> grant allon *.* to t4om@"%" identified by "123";
                            使用tcpdump抓包

                                ~]# tcpdump -w log.cap -i eth0 src or dst port 3306
                            客户端远程登录数据库
                                ~]# mysql -h 192.168.4.23 -utom -p123
                                ~]# tcpdump -A -r log.cap

                            使用ssl/ssh加密数据传输



                    tomcate


                        安装tomcat

                            你需要 openjdk的支持

                                 yum -y install java-1.8.0-openjdk
                                 java -version
                                 解包 tomcat
                                 复制到  /usr/local/tomcat/
                                 确保防火墙关闭 selinux 状态
                                 启动tomcat
                                 /usr/local/tomcat/bin/startup.sh
                                 检查Tomcat的端口
                                 ss -antulp | grep 8080
                                 访问测试
                                 curl -I http://192.168.4.80:8080/a.html

                        修改tomcat配置文件隐藏 tomcat版本信息
                             安装
                                 yum -y install java-1.8.0-openjdk-devel

                                 which jar  //需要使用jar 解压

                             修改配置文件
                                  ~]# /usr/local/tomcat/bin/shutdown.sh
                                  ~]# cd /usr/local/tomcat/lib/
                                  lib]# jar -xf catalina.jar
                                  lib]# vim org/apache/catalina/util/ServerInfo.properties

                                        server.info=APPLE.INC
                                        server.number=7.4.41.0
                                        server.built=2018.01

                                  lib]# vim +69 /usr/local/tomcat/conf/server.xml

                                            <Connector port="8080" protocol="HTTP/1.1"
                                            connectionTimeout="20000"
                                            redirectPort="8443" server="apple" />

                                  lib]# /usr/local/tomcat/bin/startup.sh

                                  访问测试
                                  curl -I http://192.168.4.80:8080/a.html
                                    .....
                                    Server: apple
                                    .....

                             降权启动

                                 添加用户并指定启动用户

                                 useradd tomcat
                                 chmod -R tomcat:tomcat /usr/local/tomcat/
                                 su -c "/usr/local/tomcat/bin/startup.sh"  tomcat

                                开机启动

                                    lib]# chmod +x /etc/rc.local
                                    lib]# vim /etc/rc.local
                                    su -c "/usr/local/tomcat/bin/startup.sh"  tomcat

                                    测试
                                    ps aux | grep tomcat

                                    删除默认测试页面
                                    ]# rm -rf /usr/local/tomcat/webapps/*
                                    默认测试页面可以查看到详细的Tomcat详细




                EOF end of file
                cat  << EOF

                    EOF
                yum -y install expect

                spawn