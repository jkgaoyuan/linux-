大型架构及配置
DAY01 ansible
DevOps
    DevOps（Development和Operations的组合词）是一组过程、方法与系统的统称，用于促进开发（应用程序/软件工程）、技术运营和质量保障（QA）部门之间的沟通、协作与整合。
    它是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。
    它的出现是由于软件行业日益清晰地认识到：为了按时交付软件产品和服务，开发和运营工作必须紧密合作.
一.ansible
    1.1简介
        ansible是it自动化和DevOps软件 基于python开发 批量部署 批量运行命令
        ansible可以实现:
        -自动化部署app
        -自动化管理配置项目
        -自动化持续交互
        -自动化云服务管理

    1.2ansible 特性
         模块化设计,调运特定的模块完成特定任务
         基于python
         -paramiko
         -PyYAML
         -jinja2
         基于模块支持支持JSON 标准输出格式,可以采用任何编程语言重写
         部署简单
         主从模式工作
         自定义模块
         支持playbook
         易用使用
         支持多层部署
         支持异构it环境
    1.3 为什么选择ansible
        特点:
            社区活跃度
            学习成本
            使用成本
            编码语言
            性能
            使用广发
        优点:
            只要支持ssh和python
            无客户端
            ansible功能强大,模块丰富
            上手容易,门槛低
            二次开发容易
            活跃度高
    1.4 工作流程


            host1           cmd1
            host2           cmd2
            host3           cmd3
            ...             ...

            hostx           cmdx

        每台host 会遍历 命令集合,我们就是让一批机器执行一批命令

        ansible 执行流程

            读取配置
            抓起全量机器&分组列表
            使用host-pattern过滤机器列表
            根据参数确定执行模块和配置
            runner执行返回
            输出,结束


    1.5 安装
        软件依赖关系

            管理主机
                python 2.6 /2.7以上
                ansible需要一下模块
                    -paramiko
                    -PyYAML
                    -jinja2
                    -httplib2
                    -six


            被管理主机
                ansible 默认通过ssh协议管理
                被管理机器要开启ssh服务,允许ansible主机登录
                管理节点需要python2.5以上
                被管理节点开启selinux,需要安装 libselinux-python


        准备 6 台机器 1.40-1.45
        安装ansible
            yum 安装
                拷贝软件包到
                跟新索引文件 createrepo
                配置yum
            安装
                ansible管理主机上
                yum -y install ansible

                vim /etc/ansible/ansible.cfg
                    行取消注释
                    14 inventory      = /etc/ansible/hosts //主机集合
                    61 host_key_checking = False //不检查配置文件
    1.6主机定义与分组
        安装ansible后
            ########################### 记住啊######################
            ansible配置文件顺序查找
            -先检测ansible_config变量定义的配置文件
            -其次检测当前目录下的./ansible.cfg
            -再检查当前用户家目录下~/ansible.cfg文件
            -最后检查/etc/ansible/ansible.cfg文件
            /etc/ansible/ansible.cfg 是ansiblemore配置文件路径
            ansible.cfg 配置文件
                -inventory 定义托管主机地址配置文件路径
            ########################################################
            定义主机格式
                /etc/ansible/hosts 配置文件 位置
                [组名]
                主机名称/ip 其他参数
                vim /etc/ansible/hosts
                    添加
                    [web]
                    web[1:2]  //范围指定也可以向下面一样写
                    [db]
                    db[1:2]
                    [other]   //
                    cache
    1.7 ansible 命令

        ansible 主机集合 -m 模块 -a 模块参宿
            -主机集合 主机名/分组名 , 分割
            -m 模块名称 默认command模块
            -a / -args 模块参数
            -i inventory 文件路径/ 可执行脚本
            -k 使用交互式登录密码
            -e定义变量
            -v 显示详细信息

            显示可执行主机
            ansible web,db --list-hosts
            批量检测主机
            ansible web -m ping -k

            部署免密码登录

            ssh-keygen -t rsa -b 2048 -N'' -f /root/.ssh/key
            for i in 41 42 43 44 45
            > do ssh-copy-id -i key.pub root@192.168.1.$i
            > done
            再次检测
            ansible web -m ping

        inventory 扩展参数
            -ansible_ssh_port
                -ssh端口号: 若不是默认端口通过这个变量设置
                /etc/ansible/hosts
                [web]
                web1 ansible_ssh_port=22
            -ansible_ssh_user
                -默认的ssh用户名

            -ansible_ssh_pass
                -ssh密码 建议使用--ask-pass/ ssh秘钥
            -ansible_ssh_private_key_file
                -ssh使用的私钥文件,使用于多个秘钥,并不想使用ssh代理

            vars变量定义,用于用户组名后面
                [all:vars]   //all表示全部组,
                ansible_ssh_private_key_file="/root/.ssh/key"
            children 子组定义,引用其他组名称
                [app:children]
                web    //其他组名.非主机名
                db

            自定义配置文件
                有多少人就可以有多少配置文件,分组只限制与本文件(用户)
                创建 文件夹 myansible
                创建配置文件ansible.cfg
                    sed -n "14p;61p" /etc/ansible/ansible.cfg
                    [defaults]  //配置文件分组名称
                    inventory = myhost      //14 行
                    host_key_checking = False  //61 行

                配置主机文件
                    [app]
                    web1
                    db1
                    cache
                    [app1]
                    web1
                测试 ansible app -m ping










