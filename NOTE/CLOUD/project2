DAY01
    一.xshell
        1.上传/下载linux的文件到win
            yum -y install lrzsz

                sz 文件名称   下载
                linux进入目标目录,在win下选择直接拖入终端 就上传完成了.

                只能对 文件操作 不能对文件夹操作,所以我们下载/上传文件夹需要先压缩为压缩包在上传/下载.
        2.同时对多个终端发送相同的命令
            右下角的三条横线 选择 全部标签 就可以对现在已经打开的全部标签发送相同的命令
    二.web集群的 vip

        如下的拓扑图 我们只需要一个vip (公网ip)
                lvs

      web1  web2  web3 web4

      核心

      jump(跳板机,也会安装运维审计服务) 不但第二yum源还但任 ansible 服务器, 我们通常通过 jump服务器来管理其他服务器


                jump

      ser1    ser2      ser3  ****



      我们在云主机上创建的 xxx.pem文件 实际上是 id_rsa 私钥文件 设置文件为属性 400,.ssh/文件夹的属性 700,
      而使用ansible 有需要 免密登录,在创建主机的时候 选择该秘钥,就可以通过jump跳板服务器来远程管理内网服务器.


            ifconfig [interface] IP/mask
            ifconfig eth0:1 192.168.1.100/24

                    立即生效,重启失效

            负载均衡

            nginx     cache,web
             lvs       4 层         问题: 超不过200台,不能跨vlan   直到lvs的 full-net出现,解决了不能跨vlan,需要修改内核.
            haproxy    4/7层

            这个架构的高扩展我们直接创建新的  集群和 nginx 在接入 lvs 即可
                            lvs         4层

                       nginx    nginx    7层

                     web集群1   web 集群2

                                            超大型网络架构  lvs-full-net+DPDK = DPVS
                                                OSPF

                            lvs                 lvs               lvs

                       nginx    nginx        nginx    nginx    nginx    nginx

                     web集群1   web 集群2   web集群1   web 集群2  web集群1   web 集群2




            已经做成 基于路径的 动静分离

            将外网ip绑定在 192.168.1.99 提供了动静分离 上

            访问 image下文件是静态 页面
                http://139.9.94.171/image/test.html   显示 hostname      gif /jpg
                    显示web4/web5
            访问 /下文件是动态 页面  Tomcat 提供服务
                http://139.9.94.171/test.jsp    显示hostname和ip
                显示 时间和 web1/2/3
            但是还没有做ceph 做完ceph后将文件转移到 ceph中来做 网站根目录


            tomcat 启动  /usr/local/tomcat/bin/startup.sh  检查 8080端口

            nginx 启动  /usr/local/nginx/sbin/nginx

            记得启动 1.99 的nginx调度


            重启集群后 记得 挂载ceph

                 tomcat
                 rbd map vm1-image
                 mount /dev/rbd0 /usr/local/tomcat/webapps/ROOT/

                 nginx
                 rbd map vm1-image
                 mount /dev/rbd0 nginx/usr/local/nginx/sbin/nginx



             数据库使用mariadb  root密码为 a  mysql -uroot -pa
                主从 同步 repluser 密码为 a
                    slave 1 slave2 repluser  a

                设置 mha vip 1.110
                http://tts.tmooc.cn/ttsPage/LINUX/NSDTN201904/RDBMS2/DAY04/CASE/01/index.html#case1
                到这里这里了
                4）在当前主服务器部署vip地址

                mha启动 命令
                masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover

               ##############################
                manager_workdir=/var/log/masterha/app1
                manager_log=/var/log/masterha/app1/manager.log
                master_ip_failover_script=/etc/mha/master_ip_failover

                1.40:
                    检查 ssh   masterha_check_ssh --conf=/etc/mha/app1.cnf
                    检查 主从   masterha_check_repl --conf=/etc/mha/app1.cnf
                    启动 mha集群masterha_manager --conf=/etc/mha/app1.cnf  --remove_dead_master_conf --ignore_last_failover


                1.50/1.51 读写分离
                    启动
                     maxscale -f /etc/maxscale.cnf
                     管理
                     maxadmin  -uadmin -pmariadb -P4016


                    使用user test  pass a 链接1.50 的 4006

                     mysql -h192.168.1.50 -P4006 -utest -pa

                     进行 读写 操作 ,写只向主库写, 读 可以向从库和主库读


                1.52  1.53 作为 haproxy+keeplive 为 maxscale提供高可用和负载均衡

                         haproxy 中定义的 端口 4015 作为本机监听端口,将本机端口的访问数据转发给 maxscale读写分离集群

                            访问 mysql -h192.168.1.52/53 -P4015 -utest -pa  // 测试 haproxy
                                    数据操作
                            访问 mysql -h192.168.1.111 -P4015 -utest -pa   //测试 keeplive + haproxy

                                停止 keeplive 检查 vip是否会 转移到另外一台的 keeplive+haproxy上
                                    数据操作

                54 55 redis 主从 哨兵模式

                    /etc/init.d/redis_6354  stop start  启动停止命令

                    55 启动哨兵模式   redis-sentinel /etc/sentinel.conf