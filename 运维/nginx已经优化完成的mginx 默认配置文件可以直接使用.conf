worker_processes 1;  
worker_rlimit_nofile 100000;  
events {  
worker_connections 2048;  
multi_accept on;  
use epoll;  
}  
http {  
server_tokens off;  
sendfile on;  
tcp_nopush on;  
tcp_nodelay on;  
access_log off;  
error_log error.log crit;  
keepalive_timeout 10;  
client_header_timeout 10;  
client_body_timeout 10;  
reset_timedout_connection on;  
send_timeout 10;   
include mime.types;  
default_type text/html;  
charset UTF-8;  
gzip on;  
gzip_disable "msie6";  
gzip_proxied any;  
gzip_min_length 1000;  
gzip_comp_level 6;  
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;  
open_file_cache max=100000 inactive=20s;  
open_file_cache_valid 30s;  
open_file_cache_min_uses 2;  
open_file_cache_errors on;  
	server {
        	listen       80;
        	server_name  localhost;
		location / {
            		root   html;
            		index  index.html index.htm;
     	  	 }
		error_page   500 502 503 504  /50x.html;
        	location = /50x.html {
            		root   html;
       		 }
	}

} 




#  80 转 443 配置完成1

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        server_name  www.saiho.pro;
        root         /usr/local/lighthouse/softwares/wordpress;
	return 301 https://$server_name$request_uri;

        # Load configuration files for the default server block.
       # include /etc/nginx/default.d/*.conf;

        #location / {

       # }

        #error_page 404 /404.html;
        #location = /404.html {
        #}

        #error_page 500 502 503 504 /50x.html;
       # location = /50x.html {
        }
   # }

# Settings for a TLS enabled server.
#
    server {
        listen       443 ssl;
        server_name  www.saiho.pro;
        root         /usr/local/lighthouse/softwares/wordpress;
#
        ssl_certificate "/usr/local/lighthouse/softwares/nginx/conf/1_saiho.pro_bundle.crt";
        ssl_certificate_key "/usr/local/lighthouse/softwares/nginx/conf/2_saiho.pro.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
#
        location / {

        root         /usr/local/lighthouse/softwares/wordpress;
	index  index.php index.html index.htm;
        }
#
	location ~ \.php$ {
                fastcgi_pass   127.0.0.1:9000;
                fastcgi_index  index.php;
                include        fastcgi.conf;

	}
        error_page 404 /404.html;
        location = /404.html {
        }
#
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

}
